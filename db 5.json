{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"73751f2936faa4326ce922bb168733b22e5c00fa","modified":1653798473418},{"_id":"source/about/index.md","hash":"c24cce0ca0b8920918f603acdb8c4d40a911a6e7","modified":1653798028086},{"_id":"source/_posts/Java-基础.md","hash":"45f39a1fef78e90fc00fee62288a23ddfed549e7","modified":1653897708696},{"_id":"source/_posts/How-to-use-hexo.md","hash":"294ea17090f6174032e5b3b384e4f18e9e244f2b","modified":1653786611159},{"_id":"source/_posts/项目介绍之亮点与难点.md","hash":"c83f144aa4390c663f6130945b2481b26da45107","modified":1653877086074},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1653786132477},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350741},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350720},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350720},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350737},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350737},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350737},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350740},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653898350741},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1653898350711},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1653898350712},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1653898350712},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1653898350712},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1653898350712},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1653898350712},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1653898350713},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1653898350713},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1653898350713},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1653898350713},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1653898350713},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1653898350713},{"_id":"themes/next/_config.yml","hash":"5ff37e90e4d6812c8fc40c03fa6e1d903d743470","modified":1653898350714},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1653898350714},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1653898350714},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1653898350726},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1653898350712},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1653898350712},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1653898350712},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1653898350714},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1653898350712},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1653898350714},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1653898350714},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1653898350715},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1653898350714},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1653898350715},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1653898350715},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1653898350715},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1653898350715},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1653898350715},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1653898350715},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1653898350715},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1653898350715},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1653898350716},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1653898350716},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1653898350716},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1653898350716},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1653898350725},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1653898350725},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1653898350725},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1653898350725},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1653898350725},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1653898350725},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1653898350726},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1653898350726},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1653898350768},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1653898350726},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1653898350768},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1653898350716},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1653898350768},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1653898350716},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1653898350718},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1653898350718},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1653898350718},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1653898350718},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1653898350719},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1653898350718},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1653898350719},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1653898350717},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1653898350717},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1653898350717},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1653898350717},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1653898350717},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1653898350717},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1653898350720},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1653898350720},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1653898350721},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1653898350723},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1653898350723},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1653898350723},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1653898350724},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1653898350724},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1653898350724},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1653898350724},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1653898350726},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1653898350726},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1653898350727},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1653898350727},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1653898350727},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1653898350727},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1653898350727},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1653898350727},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1653898350727},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1653898350741},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1653898350741},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1653898350741},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1653898350741},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1653898350742},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1653898350742},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1653898350742},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1653898350742},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1653898350742},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1653898350742},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1653898350742},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1653898350742},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1653898350743},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1653898350743},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1653898350743},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1653898350743},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1653898350743},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1653898350743},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1653898350743},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1653898350718},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1653898350718},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1653898350719},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1653898350719},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1653898350719},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1653898350719},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1653898350719},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1653898350720},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1653898350720},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1653898350720},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1653898350720},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1653898350720},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1653898350721},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1653898350722},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1653898350722},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1653898350722},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1653898350722},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1653898350722},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1653898350722},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1653898350722},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1653898350722},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1653898350722},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1653898350723},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1653898350723},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1653898350723},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1653898350723},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1653898350723},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1653898350723},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1653898350724},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1653898350724},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1653898350725},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1653898350725},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1653898350737},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1653898350737},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1653898350737},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1653898350737},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1653898350740},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1653898350740},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1653898350741},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1653898350741},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1653898350743},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1653898350744},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1653898350744},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1653898350744},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1653898350744},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1653898350744},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1653898350744},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1653898350744},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1653898350744},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1653898350745},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1653898350745},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1653898350747},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1653898350749},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1653898350749},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1653898350749},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1653898350749},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1653898350752},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1653898350752},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1653898350752},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1653898350752},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1653898350753},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1653898350753},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1653898350753},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1653898350753},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1653898350753},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1653898350759},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1653898350760},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1653898350760},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1653898350760},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1653898350760},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1653898350760},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1653898350761},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1653898350761},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1653898350761},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1653898350761},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1653898350761},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1653898350762},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1653898350763},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1653898350763},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1653898350763},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1653898350763},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1653898350763},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1653898350763},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1653898350763},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1653898350766},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1653898350766},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1653898350767},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1653898350768},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1653898350768},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1653898350724},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1653898350724},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1653898350733},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1653898350736},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1653898350736},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1653898350736},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1653898350736},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1653898350737},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1653898350737},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1653898350737},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1653898350738},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1653898350739},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1653898350739},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1653898350739},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1653898350739},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1653898350739},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1653898350740},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1653898350740},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1653898350740},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1653898350740},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1653898350740},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1653898350740},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1653898350744},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1653898350746},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1653898350747},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1653898350747},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1653898350749},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1653898350751},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1653898350751},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1653898350751},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1653898350752},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1653898350752},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1653898350753},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1653898350754},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1653898350753},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1653898350728},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1653898350766},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1653898350766},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1653898350728},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1653898350729},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1653898350730},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1653898350731},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1653898350732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1653898350734},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1653898350734},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1653898350733},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1653898350734},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1653898350735},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1653898350734},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1653898350734},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1653898350735},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1653898350735},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1653898350735},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1653898350735},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1653898350735},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1653898350736},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1653898350736},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1653898350739},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1653898350736},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1653898350739},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1653898350745},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1653898350739},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1653898350745},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1653898350746},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1653898350745},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1653898350746},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1653898350751},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1653898350750},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1653898350751},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1653898350751},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1653898350751},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1653898350760},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1653898350746},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1653898350759},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1653898350759},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1653898350755},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1653898350756},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1653898350759},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1653898350767},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1653898350749},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1653898350758},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1653898350765}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2022-05-29T04:27:32.000Z","_content":"\nNOT FOUND!\n","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2022-05-29 12:27:32\n---\n\nNOT FOUND!\n","updated":"2022-05-29T04:27:53.418Z","path":"404/index.html","comments":1,"layout":"page","_id":"cl3sgl5220000k5h8aea08ww0","content":"<p>NOT FOUND!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>NOT FOUND!</p>\n"},{"title":"about","date":"2022-05-29T04:19:04.000Z","_content":"# ABOUT ME\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-05-29 12:19:04\n---\n# ABOUT ME\n","updated":"2022-05-29T04:20:28.086Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl3sgl5270002k5h85dyxg4ab","content":"<h1 id=\"ABOUT-ME\"><a href=\"#ABOUT-ME\" class=\"headerlink\" title=\"ABOUT ME\"></a>ABOUT ME</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ABOUT-ME\"><a href=\"#ABOUT-ME\" class=\"headerlink\" title=\"ABOUT ME\"></a>ABOUT ME</h1>"}],"Post":[{"title":"How to use hexo","date":"2022-05-29T01:06:33.000Z","_content":"\n# 参考  \nhttps://hexo.io/docs/\n\n# 准备  \n## Nodejs  \n## Git\n\n# 初始化  \n\n# 配置  \n\n# 日常使用  \n\n# 配合github pages使用\n\n","source":"_posts/How-to-use-hexo.md","raw":"---\ntitle: How to use hexo\ndate: 2022-05-29 09:06:33\ntags:\n---\n\n# 参考  \nhttps://hexo.io/docs/\n\n# 准备  \n## Nodejs  \n## Git\n\n# 初始化  \n\n# 配置  \n\n# 日常使用  \n\n# 配合github pages使用\n\n","slug":"How-to-use-hexo","published":1,"updated":"2022-05-29T01:10:11.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sgl5240001k5h88a6z36hj","content":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://hexo.io/docs/\">https://hexo.io/docs/</a></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h1 id=\"日常使用\"><a href=\"#日常使用\" class=\"headerlink\" title=\"日常使用\"></a>日常使用</h1><h1 id=\"配合github-pages使用\"><a href=\"#配合github-pages使用\" class=\"headerlink\" title=\"配合github pages使用\"></a>配合github pages使用</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://hexo.io/docs/\">https://hexo.io/docs/</a></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h1 id=\"日常使用\"><a href=\"#日常使用\" class=\"headerlink\" title=\"日常使用\"></a>日常使用</h1><h1 id=\"配合github-pages使用\"><a href=\"#配合github-pages使用\" class=\"headerlink\" title=\"配合github pages使用\"></a>配合github pages使用</h1>"},{"title":"Java 基础","date":"2022-05-30T02:29:11.000Z","_content":"\n# 语言特性\n\n- 面向对象（封装、继承、多态）\n- 跨平台\n- 多线程支持\n- 编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）\n\n\n\n# 基础\n\n1. 基础数据类型\n\n   | 基本类型  | 位数 | 字节 | 默认值  | 取值范围                                   |\n   | --------- | ---- | ---- | ------- | ------------------------------------------ |\n   | `byte`    | 8    | 1    | 0       | -128 ~ 127                                 |\n   | `short`   | 16   | 2    | 0       | -32768 ~ 32767                             |\n   | `int`     | 32   | 4    | 0       | -2147483648 ~ 2147483647                   |\n   | `long`    | 64   | 8    | 0L      | -9223372036854775808 ~ 9223372036854775807 |\n   | `char`    | 16   | 2    | 'u0000' | 0 ~ 65535                                  |\n   | `float`   | 32   | 4    | 0f      | 1.4E-45 ~ 3.4028235E38                     |\n   | `double`  | 64   | 8    | 0d      | 4.9E-324 ~ 1.7976931348623157E308          |\n   | `boolean` | 1    |      | false   | true、false                                |\n\n   注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。\n\n2. 自动拆装箱\n\n   装箱其实就是调用了 包装类的`valueOf()`方法，拆箱其实就是调用了 `xxxValue()`方法。\n\n   1. **装箱**：将基本类型用它们对应的引用类型包装起来；\n   2. **拆箱**：将包装类型转换为基本数据类型；\n\n3. 局部变量与成员变量\n\n   局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；\n\n   成员变量通常在堆中，随对象创建而存在。有默认值。\n\n4. 集合\n\n   List，Map，Set以及线程安全相关集合\n\n   集合操作参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\n\n5. 并发\n\n6. 异常\n\n   共同祖先：java.lang.Throwable\n\n   重要子类：Exception与Error\n\n   **`Exception`** ：程序本身可以处理的异常，可以通过 `catch` 来进行捕获。`Exception` 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。\n\n   - Checked Excpetion:\n     - IOException\n     - ClassNotFoundException\n     - SQLException\n     - FileNotFoundException\n   - Unchecked Exception:\n     - ArithmeticException\n     - ClassCastException\n     - NullPointException\n     - IllegalThreadStateException\n     - IndexOutOfBoundsException\n\n   **`Error`**：`Error` 属于程序无法处理的错误 ，~~我们没办法通过 `catch` 来进行捕获~~不建议通过`catch`捕获 。例如 Java 虚拟机运行错误（`Virtual MachineError`）、虚拟机内存不够错误(`OutOfMemoryError`)、类定义错误（`NoClassDefFoundError`）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n\n   - OutOfMemoryError\n   - StackOverFlowError\n   - AssertionError\n   - VritualMachineError\n\n   注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。\n\n   JVM官方文档明确提到：\n\n   If the `try` clause executes a *return*, the compiled code does the following:\n\n   1. Saves the return value (if any) in a local variable.\n   2. Executes a *jsr* to the code for the `finally` clause.\n   3. Upon return from the `finally` clause, returns the value saved in the local variable.\n\n   异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。\n\n7. 泛型\n\n   一套工具适配多种类型\n\n   提供编译时检查避免错误\n\n   泛型擦出：运行时泛型会去掉\n\n8. 反射\n\n   优点：灵活\n\n   缺点：性能问题，参考：https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\n\n   应用场景：各种框架配置与调用都有用到反射。\n\n9. IO\n\n   操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 **用户空间（User space）** 和 **内核空间（Kernel space ）** 。\n\n   **从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。**\n\n   UNIX 系统下， IO 模型一共有 5 种： **同步阻塞 I/O**、**同步非阻塞 I/O**、**I/O 多路复用**、**信号驱动 I/O** 和**异步 I/O**。\n\n   - BIO\n\n     - 同步阻塞 I/O\n\n       阻塞每次读写，等到内核态数据拷贝完成返回。\n\n     - 同步非阻塞 I/O\n\n       多次读取不阻塞，内核态数据拷贝时时阻塞。\n\n   - NIO\n\n     - select \n\n       维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。\n\n       ```c\n       int select(int nfds, fd_set *readfds, fd_set *writefds,\n                  fd_set *exceptfds, struct timeval *timeout);\n       ```\n\n       \n\n     - pool 同select，但是无最大文件描述符限制\n\n       ```c\n       int poll(struct pollfd fds[], nfds_t nfds, int timeout)；\n       ```\n\n       \n\n     - epool\n\n       基于事件\n\n       ```c\n       struct epitem {\n         struct rb_node  rbn;      \n         struct list_head  rdllink; \n         struct epitem  *next;      \n         struct epoll_filefd  ffd;  \n         int  nwait;                 \n         struct list_head  pwqlist;  \n         struct eventpoll  *ep;      \n         struct list_head  fllink;   \n         struct epoll_event  event;  \n       };\n       \n       struct eventpoll {\n         spin_lock_t       lock; \n         struct mutex      mtx;  \n         wait_queue_head_t     wq; \n         wait_queue_head_t   poll_wait; \n         struct list_head    rdllist;   //就绪链表\n         struct rb_root      rbr;      //红黑树根节点 \n         struct epitem      *ovflist;\n       };\n       \n       //用户数据载体\n       typedef union epoll_data {\n          void    *ptr;\n          int      fd;\n          uint32_t u32;\n          uint64_t u64;\n       } epoll_data_t;\n       //fd装载入内核的载体\n        struct epoll_event {\n            uint32_t     events;    /* Epoll events */\n            epoll_data_t data;      /* User data variable */\n        };\n        //三板斧api\n       int epoll_create(int size); \n       int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);  \n       int epoll_wait(int epfd, struct epoll_event *events,\n                        int maxevents, int timeout);\n       ```\n\n       \n\n   - AIO\n\n     拿回数据异步\n\n   参考链接：https://www.jianshu.com/p/722819425dbd\n\n   \n\n   10. JVM\n\n       可以先看看这个：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\n\n       \n\n       - 内存分配\n\n       堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。\n\n       栈：本地方法栈、虚拟机栈以及程序计数器\n\n       方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。\n\n       参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\n\n       \n\n       - 对象创建流程\n\n         1. 类加载\n\n            检查是否已加载过，如果没有进行类加载\n\n         2. 申请内存\n\n            类加载完成即可确定需要的内存，随后便申请内存分配\n\n            分配策略：\n\n            - 指针碰撞\n\n              维护一个指针，区分已使用空间与未使用空间。\n\n            - 空闲列表\n\n              维护一个列表，记录哪些内存块可用\n\n            并发分配内存：\n\n            - CAS+失败重试：通过CAS保证操作原子性\n            - TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。\n\n         3. 类初始化\n\n            - 初始化零值\n\n              设置初始值，对象头不调整\n\n            - 设置对象头\n\n              **虚拟机要对对象进行必要的设置**，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 **这些信息存放在对象头中。** 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。\n\n            - init方法执行\n\n       - 对象内存布局\n\n         对象头，实例数据，对齐填充\n\n         **Hotspot 虚拟机的对象头包括两部分信息**，**第一部分用于存储对象自身的运行时数据**（哈希码、GC 分代年龄、锁状态标志等等），**另一部分是类型指针**，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。\n\n         **实例数据部分是对象真正存储的有效信息**，也是在程序中所定义的各种类型的字段内容。\n\n         **对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。** 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。\n\n         \n\n       - 对象访问方式\n\n         句柄和直接指针\n\n         - 句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）\n\n         - 直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针\n\n         优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。\n\n       - 类加载模型\n\n         双亲委托\n\n         如果自定义类加载器：继承`ClassLoader`，重写`findClass()`方法，如果需要打破双亲委托，则需要重写`loadClass()`方法\n\n       - JVM参数与优化\n\n         参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\n\n# 面试问题整理\n\n1. 字符型常量与字符串常量的区别？\n\n   字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节\n\n2. 重写遵循规范\n\n   1. 方法名，形参需要相同\n   2. 返回值类型以及声明异常均小于或等于父类方法\n   3. 访问权限需大于或等于父类方法\n\n3. 可变长参数\n\n   可以传入不等长参数：\n\n   ```java\n   public static void method(String... args) {\n      //......\n   }\n   ```\n\n   需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法\n\n   \n\n   \n\n4. 基本数据类型与包装类的区别？\n\n   1. 包装类型默认值null\n   2. 包装类型可用于泛型\n   3. 基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中\n\n5. 构造方否可以override？\n\n   不能override，可以overload\n\n6. java 9为何将String底层由 char[] 改成了 byte[] ?\n\n   新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，`byte` 占一个字节(8 位)，`char` 占用 2 个字节（16），`byte` 相较 `char` 节省一半的内存空间。\n\n7. String采用运算符“+”拼接为何耗费内存？\n\n   内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。\n\n8. 字符串常量池什么作用？\n\n   创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。\n\n9. intern方法作用\n\n   native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。\n\n10. 常量折叠\n\n    对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化\n\n11. finally代码一定执行吗？\n\n    不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。\n\n12. Java只有值传递吗？\n\n    是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。\n\n13. 通过类加载器与Class.forName()差异\n\n    Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。\n\n14. 精度丢失与BigDecimal\n\n    由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。\n\n    \n\n    \n\n\n\n\n\n","source":"_posts/Java-基础.md","raw":"---\ntitle: Java 基础\ndate: 2022-05-30 10:29:11\ntags: 面试 Java 基础\n---\n\n# 语言特性\n\n- 面向对象（封装、继承、多态）\n- 跨平台\n- 多线程支持\n- 编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）\n\n\n\n# 基础\n\n1. 基础数据类型\n\n   | 基本类型  | 位数 | 字节 | 默认值  | 取值范围                                   |\n   | --------- | ---- | ---- | ------- | ------------------------------------------ |\n   | `byte`    | 8    | 1    | 0       | -128 ~ 127                                 |\n   | `short`   | 16   | 2    | 0       | -32768 ~ 32767                             |\n   | `int`     | 32   | 4    | 0       | -2147483648 ~ 2147483647                   |\n   | `long`    | 64   | 8    | 0L      | -9223372036854775808 ~ 9223372036854775807 |\n   | `char`    | 16   | 2    | 'u0000' | 0 ~ 65535                                  |\n   | `float`   | 32   | 4    | 0f      | 1.4E-45 ~ 3.4028235E38                     |\n   | `double`  | 64   | 8    | 0d      | 4.9E-324 ~ 1.7976931348623157E308          |\n   | `boolean` | 1    |      | false   | true、false                                |\n\n   注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。\n\n2. 自动拆装箱\n\n   装箱其实就是调用了 包装类的`valueOf()`方法，拆箱其实就是调用了 `xxxValue()`方法。\n\n   1. **装箱**：将基本类型用它们对应的引用类型包装起来；\n   2. **拆箱**：将包装类型转换为基本数据类型；\n\n3. 局部变量与成员变量\n\n   局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；\n\n   成员变量通常在堆中，随对象创建而存在。有默认值。\n\n4. 集合\n\n   List，Map，Set以及线程安全相关集合\n\n   集合操作参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\n\n5. 并发\n\n6. 异常\n\n   共同祖先：java.lang.Throwable\n\n   重要子类：Exception与Error\n\n   **`Exception`** ：程序本身可以处理的异常，可以通过 `catch` 来进行捕获。`Exception` 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。\n\n   - Checked Excpetion:\n     - IOException\n     - ClassNotFoundException\n     - SQLException\n     - FileNotFoundException\n   - Unchecked Exception:\n     - ArithmeticException\n     - ClassCastException\n     - NullPointException\n     - IllegalThreadStateException\n     - IndexOutOfBoundsException\n\n   **`Error`**：`Error` 属于程序无法处理的错误 ，~~我们没办法通过 `catch` 来进行捕获~~不建议通过`catch`捕获 。例如 Java 虚拟机运行错误（`Virtual MachineError`）、虚拟机内存不够错误(`OutOfMemoryError`)、类定义错误（`NoClassDefFoundError`）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n\n   - OutOfMemoryError\n   - StackOverFlowError\n   - AssertionError\n   - VritualMachineError\n\n   注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。\n\n   JVM官方文档明确提到：\n\n   If the `try` clause executes a *return*, the compiled code does the following:\n\n   1. Saves the return value (if any) in a local variable.\n   2. Executes a *jsr* to the code for the `finally` clause.\n   3. Upon return from the `finally` clause, returns the value saved in the local variable.\n\n   异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。\n\n7. 泛型\n\n   一套工具适配多种类型\n\n   提供编译时检查避免错误\n\n   泛型擦出：运行时泛型会去掉\n\n8. 反射\n\n   优点：灵活\n\n   缺点：性能问题，参考：https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\n\n   应用场景：各种框架配置与调用都有用到反射。\n\n9. IO\n\n   操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 **用户空间（User space）** 和 **内核空间（Kernel space ）** 。\n\n   **从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。**\n\n   UNIX 系统下， IO 模型一共有 5 种： **同步阻塞 I/O**、**同步非阻塞 I/O**、**I/O 多路复用**、**信号驱动 I/O** 和**异步 I/O**。\n\n   - BIO\n\n     - 同步阻塞 I/O\n\n       阻塞每次读写，等到内核态数据拷贝完成返回。\n\n     - 同步非阻塞 I/O\n\n       多次读取不阻塞，内核态数据拷贝时时阻塞。\n\n   - NIO\n\n     - select \n\n       维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。\n\n       ```c\n       int select(int nfds, fd_set *readfds, fd_set *writefds,\n                  fd_set *exceptfds, struct timeval *timeout);\n       ```\n\n       \n\n     - pool 同select，但是无最大文件描述符限制\n\n       ```c\n       int poll(struct pollfd fds[], nfds_t nfds, int timeout)；\n       ```\n\n       \n\n     - epool\n\n       基于事件\n\n       ```c\n       struct epitem {\n         struct rb_node  rbn;      \n         struct list_head  rdllink; \n         struct epitem  *next;      \n         struct epoll_filefd  ffd;  \n         int  nwait;                 \n         struct list_head  pwqlist;  \n         struct eventpoll  *ep;      \n         struct list_head  fllink;   \n         struct epoll_event  event;  \n       };\n       \n       struct eventpoll {\n         spin_lock_t       lock; \n         struct mutex      mtx;  \n         wait_queue_head_t     wq; \n         wait_queue_head_t   poll_wait; \n         struct list_head    rdllist;   //就绪链表\n         struct rb_root      rbr;      //红黑树根节点 \n         struct epitem      *ovflist;\n       };\n       \n       //用户数据载体\n       typedef union epoll_data {\n          void    *ptr;\n          int      fd;\n          uint32_t u32;\n          uint64_t u64;\n       } epoll_data_t;\n       //fd装载入内核的载体\n        struct epoll_event {\n            uint32_t     events;    /* Epoll events */\n            epoll_data_t data;      /* User data variable */\n        };\n        //三板斧api\n       int epoll_create(int size); \n       int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);  \n       int epoll_wait(int epfd, struct epoll_event *events,\n                        int maxevents, int timeout);\n       ```\n\n       \n\n   - AIO\n\n     拿回数据异步\n\n   参考链接：https://www.jianshu.com/p/722819425dbd\n\n   \n\n   10. JVM\n\n       可以先看看这个：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\n\n       \n\n       - 内存分配\n\n       堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。\n\n       栈：本地方法栈、虚拟机栈以及程序计数器\n\n       方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。\n\n       参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\n\n       \n\n       - 对象创建流程\n\n         1. 类加载\n\n            检查是否已加载过，如果没有进行类加载\n\n         2. 申请内存\n\n            类加载完成即可确定需要的内存，随后便申请内存分配\n\n            分配策略：\n\n            - 指针碰撞\n\n              维护一个指针，区分已使用空间与未使用空间。\n\n            - 空闲列表\n\n              维护一个列表，记录哪些内存块可用\n\n            并发分配内存：\n\n            - CAS+失败重试：通过CAS保证操作原子性\n            - TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。\n\n         3. 类初始化\n\n            - 初始化零值\n\n              设置初始值，对象头不调整\n\n            - 设置对象头\n\n              **虚拟机要对对象进行必要的设置**，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 **这些信息存放在对象头中。** 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。\n\n            - init方法执行\n\n       - 对象内存布局\n\n         对象头，实例数据，对齐填充\n\n         **Hotspot 虚拟机的对象头包括两部分信息**，**第一部分用于存储对象自身的运行时数据**（哈希码、GC 分代年龄、锁状态标志等等），**另一部分是类型指针**，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。\n\n         **实例数据部分是对象真正存储的有效信息**，也是在程序中所定义的各种类型的字段内容。\n\n         **对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。** 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。\n\n         \n\n       - 对象访问方式\n\n         句柄和直接指针\n\n         - 句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）\n\n         - 直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针\n\n         优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。\n\n       - 类加载模型\n\n         双亲委托\n\n         如果自定义类加载器：继承`ClassLoader`，重写`findClass()`方法，如果需要打破双亲委托，则需要重写`loadClass()`方法\n\n       - JVM参数与优化\n\n         参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\n\n# 面试问题整理\n\n1. 字符型常量与字符串常量的区别？\n\n   字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节\n\n2. 重写遵循规范\n\n   1. 方法名，形参需要相同\n   2. 返回值类型以及声明异常均小于或等于父类方法\n   3. 访问权限需大于或等于父类方法\n\n3. 可变长参数\n\n   可以传入不等长参数：\n\n   ```java\n   public static void method(String... args) {\n      //......\n   }\n   ```\n\n   需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法\n\n   \n\n   \n\n4. 基本数据类型与包装类的区别？\n\n   1. 包装类型默认值null\n   2. 包装类型可用于泛型\n   3. 基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中\n\n5. 构造方否可以override？\n\n   不能override，可以overload\n\n6. java 9为何将String底层由 char[] 改成了 byte[] ?\n\n   新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，`byte` 占一个字节(8 位)，`char` 占用 2 个字节（16），`byte` 相较 `char` 节省一半的内存空间。\n\n7. String采用运算符“+”拼接为何耗费内存？\n\n   内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。\n\n8. 字符串常量池什么作用？\n\n   创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。\n\n9. intern方法作用\n\n   native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。\n\n10. 常量折叠\n\n    对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化\n\n11. finally代码一定执行吗？\n\n    不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。\n\n12. Java只有值传递吗？\n\n    是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。\n\n13. 通过类加载器与Class.forName()差异\n\n    Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。\n\n14. 精度丢失与BigDecimal\n\n    由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。\n\n    \n\n    \n\n\n\n\n\n","slug":"Java-基础","published":1,"updated":"2022-05-30T08:01:48.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sgl5270003k5h84svw4e7t","content":"<h1 id=\"语言特性\"><a href=\"#语言特性\" class=\"headerlink\" title=\"语言特性\"></a>语言特性</h1><ul>\n<li>面向对象（封装、继承、多态）</li>\n<li>跨平台</li>\n<li>多线程支持</li>\n<li>编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）</li>\n</ul>\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><ol>\n<li><p>基础数据类型</p>\n<table>\n<thead>\n<tr>\n<th>基本类型</th>\n<th>位数</th>\n<th>字节</th>\n<th>默认值</th>\n<th>取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>byte</code></td>\n<td>8</td>\n<td>1</td>\n<td>0</td>\n<td>-128 ~ 127</td>\n</tr>\n<tr>\n<td><code>short</code></td>\n<td>16</td>\n<td>2</td>\n<td>0</td>\n<td>-32768 ~ 32767</td>\n</tr>\n<tr>\n<td><code>int</code></td>\n<td>32</td>\n<td>4</td>\n<td>0</td>\n<td>-2147483648 ~ 2147483647</td>\n</tr>\n<tr>\n<td><code>long</code></td>\n<td>64</td>\n<td>8</td>\n<td>0L</td>\n<td>-9223372036854775808 ~ 9223372036854775807</td>\n</tr>\n<tr>\n<td><code>char</code></td>\n<td>16</td>\n<td>2</td>\n<td>‘u0000’</td>\n<td>0 ~ 65535</td>\n</tr>\n<tr>\n<td><code>float</code></td>\n<td>32</td>\n<td>4</td>\n<td>0f</td>\n<td>1.4E-45 ~ 3.4028235E38</td>\n</tr>\n<tr>\n<td><code>double</code></td>\n<td>64</td>\n<td>8</td>\n<td>0d</td>\n<td>4.9E-324 ~ 1.7976931348623157E308</td>\n</tr>\n<tr>\n<td><code>boolean</code></td>\n<td>1</td>\n<td></td>\n<td>false</td>\n<td>true、false</td>\n</tr>\n</tbody></table>\n<p>注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。</p>\n</li>\n<li><p>自动拆装箱</p>\n<p>装箱其实就是调用了 包装类的<code>valueOf()</code>方法，拆箱其实就是调用了 <code>xxxValue()</code>方法。</p>\n<ol>\n<li><strong>装箱</strong>：将基本类型用它们对应的引用类型包装起来；</li>\n<li><strong>拆箱</strong>：将包装类型转换为基本数据类型；</li>\n</ol>\n</li>\n<li><p>局部变量与成员变量</p>\n<p>局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；</p>\n<p>成员变量通常在堆中，随对象创建而存在。有默认值。</p>\n</li>\n<li><p>集合</p>\n<p>List，Map，Set以及线程安全相关集合</p>\n<p>集合操作参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md</a></p>\n</li>\n<li><p>并发</p>\n</li>\n<li><p>异常</p>\n<p>共同祖先：java.lang.Throwable</p>\n<p>重要子类：Exception与Error</p>\n<p><strong><code>Exception</code></strong> ：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。</p>\n<ul>\n<li>Checked Excpetion:<ul>\n<li>IOException</li>\n<li>ClassNotFoundException</li>\n<li>SQLException</li>\n<li>FileNotFoundException</li>\n</ul>\n</li>\n<li>Unchecked Exception:<ul>\n<li>ArithmeticException</li>\n<li>ClassCastException</li>\n<li>NullPointException</li>\n<li>IllegalThreadStateException</li>\n<li>IndexOutOfBoundsException</li>\n</ul>\n</li>\n</ul>\n<p>**<code>Error</code>**：<code>Error</code> 属于程序无法处理的错误 ，<del>我们没办法通过 <code>catch</code> 来进行捕获</del>不建议通过<code>catch</code>捕获 。例如 Java 虚拟机运行错误（<code>Virtual MachineError</code>）、虚拟机内存不够错误(<code>OutOfMemoryError</code>)、类定义错误（<code>NoClassDefFoundError</code>）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<ul>\n<li>OutOfMemoryError</li>\n<li>StackOverFlowError</li>\n<li>AssertionError</li>\n<li>VritualMachineError</li>\n</ul>\n<p>注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。</p>\n<p>JVM官方文档明确提到：</p>\n<p>If the <code>try</code> clause executes a <em>return</em>, the compiled code does the following:</p>\n<ol>\n<li>Saves the return value (if any) in a local variable.</li>\n<li>Executes a <em>jsr</em> to the code for the <code>finally</code> clause.</li>\n<li>Upon return from the <code>finally</code> clause, returns the value saved in the local variable.</li>\n</ol>\n<p>异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。</p>\n</li>\n<li><p>泛型</p>\n<p>一套工具适配多种类型</p>\n<p>提供编译时检查避免错误</p>\n<p>泛型擦出：运行时泛型会去掉</p>\n</li>\n<li><p>反射</p>\n<p>优点：灵活</p>\n<p>缺点：性能问题，参考：<a href=\"https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\">https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow</a></p>\n<p>应用场景：各种框架配置与调用都有用到反射。</p>\n</li>\n<li><p>IO</p>\n<p>操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 <strong>用户空间（User space）</strong> 和 <strong>内核空间（Kernel space ）</strong> 。</p>\n<p><strong>从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。</strong></p>\n<p>UNIX 系统下， IO 模型一共有 5 种： <strong>同步阻塞 I&#x2F;O</strong>、<strong>同步非阻塞 I&#x2F;O</strong>、<strong>I&#x2F;O 多路复用</strong>、<strong>信号驱动 I&#x2F;O</strong> 和<strong>异步 I&#x2F;O</strong>。</p>\n<ul>\n<li><p>BIO</p>\n<ul>\n<li><p>同步阻塞 I&#x2F;O</p>\n<p>阻塞每次读写，等到内核态数据拷贝完成返回。</p>\n</li>\n<li><p>同步非阻塞 I&#x2F;O</p>\n<p>多次读取不阻塞，内核态数据拷贝时时阻塞。</p>\n</li>\n</ul>\n</li>\n<li><p>NIO</p>\n<ul>\n<li><p>select </p>\n<p>维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"type\">int</span> nfds, fd_set *readfds, fd_set *writefds,</span></span><br><span class=\"line\"><span class=\"params\">           fd_set *exceptfds, <span class=\"keyword\">struct</span> timeval *timeout)</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>pool 同select，但是无最大文件描述符限制</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">poll</span><span class=\"params\">(<span class=\"keyword\">struct</span> pollfd fds[], <span class=\"type\">nfds_t</span> nfds, <span class=\"type\">int</span> timeout)</span>；</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>epool</p>\n<p>基于事件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span> &#123;</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_node</span>  <span class=\"title\">rbn</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">rdllink</span>;</span> </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>  *<span class=\"title\">next</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_filefd</span>  <span class=\"title\">ffd</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">int</span>  nwait;                 </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">pwqlist</span>;</span>  </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span>  *<span class=\"title\">ep</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">fllink</span>;</span>   </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span>  <span class=\"title\">event</span>;</span>  </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span> &#123;</span></span><br><span class=\"line\">  <span class=\"type\">spin_lock_t</span>       lock; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">mutex</span>      <span class=\"title\">mtx</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>     wq; </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>   poll_wait; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>    <span class=\"title\">rdllist</span>;</span>   <span class=\"comment\">//就绪链表</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_root</span>      <span class=\"title\">rbr</span>;</span>      <span class=\"comment\">//红黑树根节点 </span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>      *<span class=\"title\">ovflist</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户数据载体</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">epoll_data</span> &#123;</span></span><br><span class=\"line\">   <span class=\"type\">void</span>    *ptr;</span><br><span class=\"line\">   <span class=\"type\">int</span>      fd;</span><br><span class=\"line\">   <span class=\"type\">uint32_t</span> u32;</span><br><span class=\"line\">   <span class=\"type\">uint64_t</span> u64;</span><br><span class=\"line\">&#125; <span class=\"type\">epoll_data_t</span>;</span><br><span class=\"line\"><span class=\"comment\">//fd装载入内核的载体</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span> &#123;</span></span><br><span class=\"line\">     <span class=\"type\">uint32_t</span>     events;    <span class=\"comment\">/* Epoll events */</span></span><br><span class=\"line\">     <span class=\"type\">epoll_data_t</span> data;      <span class=\"comment\">/* User data variable */</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> <span class=\"comment\">//三板斧api</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_create</span><span class=\"params\">(<span class=\"type\">int</span> size)</span>; </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_ctl</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"type\">int</span> op, <span class=\"type\">int</span> fd, <span class=\"keyword\">struct</span> epoll_event *event)</span>;  </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_wait</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"keyword\">struct</span> epoll_event *events,</span></span><br><span class=\"line\"><span class=\"params\">                 <span class=\"type\">int</span> maxevents, <span class=\"type\">int</span> timeout)</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>AIO</p>\n<p>拿回数据异步</p>\n</li>\n</ul>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/722819425dbd\">https://www.jianshu.com/p/722819425dbd</a></p>\n<ol start=\"10\">\n<li><p>JVM</p>\n<p>可以先看看这个：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md</a></p>\n<ul>\n<li>内存分配</li>\n</ul>\n<p>堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。</p>\n<p>栈：本地方法栈、虚拟机栈以及程序计数器</p>\n<p>方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md</a></p>\n<ul>\n<li><p>对象创建流程</p>\n<ol>\n<li><p>类加载</p>\n<p>检查是否已加载过，如果没有进行类加载</p>\n</li>\n<li><p>申请内存</p>\n<p>类加载完成即可确定需要的内存，随后便申请内存分配</p>\n<p>分配策略：</p>\n<ul>\n<li><p>指针碰撞</p>\n<p>维护一个指针，区分已使用空间与未使用空间。</p>\n</li>\n<li><p>空闲列表</p>\n<p>维护一个列表，记录哪些内存块可用</p>\n</li>\n</ul>\n<p>并发分配内存：</p>\n<ul>\n<li>CAS+失败重试：通过CAS保证操作原子性</li>\n<li>TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。</li>\n</ul>\n</li>\n<li><p>类初始化</p>\n<ul>\n<li><p>初始化零值</p>\n<p>设置初始值，对象头不调整</p>\n</li>\n<li><p>设置对象头</p>\n<p><strong>虚拟机要对对象进行必要的设置</strong>，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 <strong>这些信息存放在对象头中。</strong> 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。</p>\n</li>\n<li><p>init方法执行</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>对象内存布局</p>\n<p>对象头，实例数据，对齐填充</p>\n<p><strong>Hotspot 虚拟机的对象头包括两部分信息</strong>，<strong>第一部分用于存储对象自身的运行时数据</strong>（哈希码、GC 分代年龄、锁状态标志等等），<strong>另一部分是类型指针</strong>，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。</p>\n<p><strong>实例数据部分是对象真正存储的有效信息</strong>，也是在程序中所定义的各种类型的字段内容。</p>\n<p><strong>对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。</strong> 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</p>\n</li>\n<li><p>对象访问方式</p>\n<p>句柄和直接指针</p>\n<ul>\n<li><p>句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）</p>\n</li>\n<li><p>直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针</p>\n</li>\n</ul>\n<p>优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。</p>\n</li>\n<li><p>类加载模型</p>\n<p>双亲委托</p>\n<p>如果自定义类加载器：继承<code>ClassLoader</code>，重写<code>findClass()</code>方法，如果需要打破双亲委托，则需要重写<code>loadClass()</code>方法</p>\n</li>\n<li><p>JVM参数与优化</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md</a></p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"面试问题整理\"><a href=\"#面试问题整理\" class=\"headerlink\" title=\"面试问题整理\"></a>面试问题整理</h1><ol>\n<li><p>字符型常量与字符串常量的区别？</p>\n<p>字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节</p>\n</li>\n<li><p>重写遵循规范</p>\n<ol>\n<li>方法名，形参需要相同</li>\n<li>返回值类型以及声明异常均小于或等于父类方法</li>\n<li>访问权限需大于或等于父类方法</li>\n</ol>\n</li>\n<li><p>可变长参数</p>\n<p>可以传入不等长参数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//......</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法</p>\n</li>\n<li><p>基本数据类型与包装类的区别？</p>\n<ol>\n<li>包装类型默认值null</li>\n<li>包装类型可用于泛型</li>\n<li>基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中</li>\n</ol>\n</li>\n<li><p>构造方否可以override？</p>\n<p>不能override，可以overload</p>\n</li>\n<li><p>java 9为何将String底层由 char[] 改成了 byte[] ?</p>\n<p>新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，<code>byte</code> 占一个字节(8 位)，<code>char</code> 占用 2 个字节（16），<code>byte</code> 相较 <code>char</code> 节省一半的内存空间。</p>\n</li>\n<li><p>String采用运算符“+”拼接为何耗费内存？</p>\n<p>内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。</p>\n</li>\n<li><p>字符串常量池什么作用？</p>\n<p>创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。</p>\n</li>\n<li><p>intern方法作用</p>\n<p>native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。</p>\n</li>\n<li><p>常量折叠</p>\n<p>对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化</p>\n</li>\n<li><p>finally代码一定执行吗？</p>\n<p>不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。</p>\n</li>\n<li><p>Java只有值传递吗？</p>\n<p>是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。</p>\n</li>\n<li><p>通过类加载器与Class.forName()差异</p>\n<p>Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。</p>\n</li>\n<li><p>精度丢失与BigDecimal</p>\n<p>由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"语言特性\"><a href=\"#语言特性\" class=\"headerlink\" title=\"语言特性\"></a>语言特性</h1><ul>\n<li>面向对象（封装、继承、多态）</li>\n<li>跨平台</li>\n<li>多线程支持</li>\n<li>编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）</li>\n</ul>\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><ol>\n<li><p>基础数据类型</p>\n<table>\n<thead>\n<tr>\n<th>基本类型</th>\n<th>位数</th>\n<th>字节</th>\n<th>默认值</th>\n<th>取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>byte</code></td>\n<td>8</td>\n<td>1</td>\n<td>0</td>\n<td>-128 ~ 127</td>\n</tr>\n<tr>\n<td><code>short</code></td>\n<td>16</td>\n<td>2</td>\n<td>0</td>\n<td>-32768 ~ 32767</td>\n</tr>\n<tr>\n<td><code>int</code></td>\n<td>32</td>\n<td>4</td>\n<td>0</td>\n<td>-2147483648 ~ 2147483647</td>\n</tr>\n<tr>\n<td><code>long</code></td>\n<td>64</td>\n<td>8</td>\n<td>0L</td>\n<td>-9223372036854775808 ~ 9223372036854775807</td>\n</tr>\n<tr>\n<td><code>char</code></td>\n<td>16</td>\n<td>2</td>\n<td>‘u0000’</td>\n<td>0 ~ 65535</td>\n</tr>\n<tr>\n<td><code>float</code></td>\n<td>32</td>\n<td>4</td>\n<td>0f</td>\n<td>1.4E-45 ~ 3.4028235E38</td>\n</tr>\n<tr>\n<td><code>double</code></td>\n<td>64</td>\n<td>8</td>\n<td>0d</td>\n<td>4.9E-324 ~ 1.7976931348623157E308</td>\n</tr>\n<tr>\n<td><code>boolean</code></td>\n<td>1</td>\n<td></td>\n<td>false</td>\n<td>true、false</td>\n</tr>\n</tbody></table>\n<p>注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。</p>\n</li>\n<li><p>自动拆装箱</p>\n<p>装箱其实就是调用了 包装类的<code>valueOf()</code>方法，拆箱其实就是调用了 <code>xxxValue()</code>方法。</p>\n<ol>\n<li><strong>装箱</strong>：将基本类型用它们对应的引用类型包装起来；</li>\n<li><strong>拆箱</strong>：将包装类型转换为基本数据类型；</li>\n</ol>\n</li>\n<li><p>局部变量与成员变量</p>\n<p>局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；</p>\n<p>成员变量通常在堆中，随对象创建而存在。有默认值。</p>\n</li>\n<li><p>集合</p>\n<p>List，Map，Set以及线程安全相关集合</p>\n<p>集合操作参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md</a></p>\n</li>\n<li><p>并发</p>\n</li>\n<li><p>异常</p>\n<p>共同祖先：java.lang.Throwable</p>\n<p>重要子类：Exception与Error</p>\n<p><strong><code>Exception</code></strong> ：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。</p>\n<ul>\n<li>Checked Excpetion:<ul>\n<li>IOException</li>\n<li>ClassNotFoundException</li>\n<li>SQLException</li>\n<li>FileNotFoundException</li>\n</ul>\n</li>\n<li>Unchecked Exception:<ul>\n<li>ArithmeticException</li>\n<li>ClassCastException</li>\n<li>NullPointException</li>\n<li>IllegalThreadStateException</li>\n<li>IndexOutOfBoundsException</li>\n</ul>\n</li>\n</ul>\n<p>**<code>Error</code>**：<code>Error</code> 属于程序无法处理的错误 ，<del>我们没办法通过 <code>catch</code> 来进行捕获</del>不建议通过<code>catch</code>捕获 。例如 Java 虚拟机运行错误（<code>Virtual MachineError</code>）、虚拟机内存不够错误(<code>OutOfMemoryError</code>)、类定义错误（<code>NoClassDefFoundError</code>）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<ul>\n<li>OutOfMemoryError</li>\n<li>StackOverFlowError</li>\n<li>AssertionError</li>\n<li>VritualMachineError</li>\n</ul>\n<p>注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。</p>\n<p>JVM官方文档明确提到：</p>\n<p>If the <code>try</code> clause executes a <em>return</em>, the compiled code does the following:</p>\n<ol>\n<li>Saves the return value (if any) in a local variable.</li>\n<li>Executes a <em>jsr</em> to the code for the <code>finally</code> clause.</li>\n<li>Upon return from the <code>finally</code> clause, returns the value saved in the local variable.</li>\n</ol>\n<p>异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。</p>\n</li>\n<li><p>泛型</p>\n<p>一套工具适配多种类型</p>\n<p>提供编译时检查避免错误</p>\n<p>泛型擦出：运行时泛型会去掉</p>\n</li>\n<li><p>反射</p>\n<p>优点：灵活</p>\n<p>缺点：性能问题，参考：<a href=\"https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\">https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow</a></p>\n<p>应用场景：各种框架配置与调用都有用到反射。</p>\n</li>\n<li><p>IO</p>\n<p>操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 <strong>用户空间（User space）</strong> 和 <strong>内核空间（Kernel space ）</strong> 。</p>\n<p><strong>从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。</strong></p>\n<p>UNIX 系统下， IO 模型一共有 5 种： <strong>同步阻塞 I&#x2F;O</strong>、<strong>同步非阻塞 I&#x2F;O</strong>、<strong>I&#x2F;O 多路复用</strong>、<strong>信号驱动 I&#x2F;O</strong> 和<strong>异步 I&#x2F;O</strong>。</p>\n<ul>\n<li><p>BIO</p>\n<ul>\n<li><p>同步阻塞 I&#x2F;O</p>\n<p>阻塞每次读写，等到内核态数据拷贝完成返回。</p>\n</li>\n<li><p>同步非阻塞 I&#x2F;O</p>\n<p>多次读取不阻塞，内核态数据拷贝时时阻塞。</p>\n</li>\n</ul>\n</li>\n<li><p>NIO</p>\n<ul>\n<li><p>select </p>\n<p>维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"type\">int</span> nfds, fd_set *readfds, fd_set *writefds,</span></span><br><span class=\"line\"><span class=\"params\">           fd_set *exceptfds, <span class=\"keyword\">struct</span> timeval *timeout)</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>pool 同select，但是无最大文件描述符限制</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">poll</span><span class=\"params\">(<span class=\"keyword\">struct</span> pollfd fds[], <span class=\"type\">nfds_t</span> nfds, <span class=\"type\">int</span> timeout)</span>；</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>epool</p>\n<p>基于事件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span> &#123;</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_node</span>  <span class=\"title\">rbn</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">rdllink</span>;</span> </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>  *<span class=\"title\">next</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_filefd</span>  <span class=\"title\">ffd</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">int</span>  nwait;                 </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">pwqlist</span>;</span>  </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span>  *<span class=\"title\">ep</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">fllink</span>;</span>   </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span>  <span class=\"title\">event</span>;</span>  </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span> &#123;</span></span><br><span class=\"line\">  <span class=\"type\">spin_lock_t</span>       lock; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">mutex</span>      <span class=\"title\">mtx</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>     wq; </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>   poll_wait; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>    <span class=\"title\">rdllist</span>;</span>   <span class=\"comment\">//就绪链表</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_root</span>      <span class=\"title\">rbr</span>;</span>      <span class=\"comment\">//红黑树根节点 </span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>      *<span class=\"title\">ovflist</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户数据载体</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">epoll_data</span> &#123;</span></span><br><span class=\"line\">   <span class=\"type\">void</span>    *ptr;</span><br><span class=\"line\">   <span class=\"type\">int</span>      fd;</span><br><span class=\"line\">   <span class=\"type\">uint32_t</span> u32;</span><br><span class=\"line\">   <span class=\"type\">uint64_t</span> u64;</span><br><span class=\"line\">&#125; <span class=\"type\">epoll_data_t</span>;</span><br><span class=\"line\"><span class=\"comment\">//fd装载入内核的载体</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span> &#123;</span></span><br><span class=\"line\">     <span class=\"type\">uint32_t</span>     events;    <span class=\"comment\">/* Epoll events */</span></span><br><span class=\"line\">     <span class=\"type\">epoll_data_t</span> data;      <span class=\"comment\">/* User data variable */</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> <span class=\"comment\">//三板斧api</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_create</span><span class=\"params\">(<span class=\"type\">int</span> size)</span>; </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_ctl</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"type\">int</span> op, <span class=\"type\">int</span> fd, <span class=\"keyword\">struct</span> epoll_event *event)</span>;  </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_wait</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"keyword\">struct</span> epoll_event *events,</span></span><br><span class=\"line\"><span class=\"params\">                 <span class=\"type\">int</span> maxevents, <span class=\"type\">int</span> timeout)</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>AIO</p>\n<p>拿回数据异步</p>\n</li>\n</ul>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/722819425dbd\">https://www.jianshu.com/p/722819425dbd</a></p>\n<ol start=\"10\">\n<li><p>JVM</p>\n<p>可以先看看这个：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md</a></p>\n<ul>\n<li>内存分配</li>\n</ul>\n<p>堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。</p>\n<p>栈：本地方法栈、虚拟机栈以及程序计数器</p>\n<p>方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md</a></p>\n<ul>\n<li><p>对象创建流程</p>\n<ol>\n<li><p>类加载</p>\n<p>检查是否已加载过，如果没有进行类加载</p>\n</li>\n<li><p>申请内存</p>\n<p>类加载完成即可确定需要的内存，随后便申请内存分配</p>\n<p>分配策略：</p>\n<ul>\n<li><p>指针碰撞</p>\n<p>维护一个指针，区分已使用空间与未使用空间。</p>\n</li>\n<li><p>空闲列表</p>\n<p>维护一个列表，记录哪些内存块可用</p>\n</li>\n</ul>\n<p>并发分配内存：</p>\n<ul>\n<li>CAS+失败重试：通过CAS保证操作原子性</li>\n<li>TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。</li>\n</ul>\n</li>\n<li><p>类初始化</p>\n<ul>\n<li><p>初始化零值</p>\n<p>设置初始值，对象头不调整</p>\n</li>\n<li><p>设置对象头</p>\n<p><strong>虚拟机要对对象进行必要的设置</strong>，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 <strong>这些信息存放在对象头中。</strong> 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。</p>\n</li>\n<li><p>init方法执行</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>对象内存布局</p>\n<p>对象头，实例数据，对齐填充</p>\n<p><strong>Hotspot 虚拟机的对象头包括两部分信息</strong>，<strong>第一部分用于存储对象自身的运行时数据</strong>（哈希码、GC 分代年龄、锁状态标志等等），<strong>另一部分是类型指针</strong>，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。</p>\n<p><strong>实例数据部分是对象真正存储的有效信息</strong>，也是在程序中所定义的各种类型的字段内容。</p>\n<p><strong>对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。</strong> 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</p>\n</li>\n<li><p>对象访问方式</p>\n<p>句柄和直接指针</p>\n<ul>\n<li><p>句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）</p>\n</li>\n<li><p>直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针</p>\n</li>\n</ul>\n<p>优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。</p>\n</li>\n<li><p>类加载模型</p>\n<p>双亲委托</p>\n<p>如果自定义类加载器：继承<code>ClassLoader</code>，重写<code>findClass()</code>方法，如果需要打破双亲委托，则需要重写<code>loadClass()</code>方法</p>\n</li>\n<li><p>JVM参数与优化</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md</a></p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"面试问题整理\"><a href=\"#面试问题整理\" class=\"headerlink\" title=\"面试问题整理\"></a>面试问题整理</h1><ol>\n<li><p>字符型常量与字符串常量的区别？</p>\n<p>字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节</p>\n</li>\n<li><p>重写遵循规范</p>\n<ol>\n<li>方法名，形参需要相同</li>\n<li>返回值类型以及声明异常均小于或等于父类方法</li>\n<li>访问权限需大于或等于父类方法</li>\n</ol>\n</li>\n<li><p>可变长参数</p>\n<p>可以传入不等长参数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//......</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法</p>\n</li>\n<li><p>基本数据类型与包装类的区别？</p>\n<ol>\n<li>包装类型默认值null</li>\n<li>包装类型可用于泛型</li>\n<li>基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中</li>\n</ol>\n</li>\n<li><p>构造方否可以override？</p>\n<p>不能override，可以overload</p>\n</li>\n<li><p>java 9为何将String底层由 char[] 改成了 byte[] ?</p>\n<p>新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，<code>byte</code> 占一个字节(8 位)，<code>char</code> 占用 2 个字节（16），<code>byte</code> 相较 <code>char</code> 节省一半的内存空间。</p>\n</li>\n<li><p>String采用运算符“+”拼接为何耗费内存？</p>\n<p>内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。</p>\n</li>\n<li><p>字符串常量池什么作用？</p>\n<p>创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。</p>\n</li>\n<li><p>intern方法作用</p>\n<p>native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。</p>\n</li>\n<li><p>常量折叠</p>\n<p>对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化</p>\n</li>\n<li><p>finally代码一定执行吗？</p>\n<p>不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。</p>\n</li>\n<li><p>Java只有值传递吗？</p>\n<p>是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。</p>\n</li>\n<li><p>通过类加载器与Class.forName()差异</p>\n<p>Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。</p>\n</li>\n<li><p>精度丢失与BigDecimal</p>\n<p>由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。</p>\n</li>\n</ol>\n"},{"title":"项目介绍之亮点与难点","date":"2022-05-30T01:34:16.000Z","_content":"\n面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。\n\n# 1.项目亮点\n\n采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？\n\n比如：\n\n- 针对复杂业务根据模块拆分从而更加灵活\n- 改为无状态服务解耦\n- 采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性\n- 采用了统一网关进行链路追踪方便问题定位以及集中化配置\n- 采用配置中心提供即时生效的配置更新与完善的权限控制\n- 统一日志采集提供快速问题定位\n- 告警系统提供实时邮件提醒\n- ......\n\n\n\n# 2.项目难点\n\n遇到了什么棘手的问题，如何分析定位问题？如果解决？\n\n比如：\n\n- 由于MQ失败重试导致的数据错误\n\n  由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。\n\n- Kerberos认证多HBase集群错误\n\n  再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。\n\n- JVM方法区OOM\n\n  由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。\n\n- DNS导致HBase Region不可用\n\n  由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。\n\n- ......\n\n\n\n# 总结\n\n对于项目面试，首先对项目有自己的认识靠清楚几个问题：\n\n- 是解决什么问题的？\n- 是如何解决的？\n- 解决过程中遇到哪些问题？\n- 问题产生的原因是什么？\n- 如果解决遇到问题的？\n- 为什么这样解决？\n- 如何减少问题发生的？\n- 有哪些调优的经验？\n","source":"_posts/项目介绍之亮点与难点.md","raw":"---\ntitle: 项目介绍之亮点与难点\ndate: 2022-05-30 09:34:16\ntags: 面试 项目\n---\n\n面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。\n\n# 1.项目亮点\n\n采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？\n\n比如：\n\n- 针对复杂业务根据模块拆分从而更加灵活\n- 改为无状态服务解耦\n- 采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性\n- 采用了统一网关进行链路追踪方便问题定位以及集中化配置\n- 采用配置中心提供即时生效的配置更新与完善的权限控制\n- 统一日志采集提供快速问题定位\n- 告警系统提供实时邮件提醒\n- ......\n\n\n\n# 2.项目难点\n\n遇到了什么棘手的问题，如何分析定位问题？如果解决？\n\n比如：\n\n- 由于MQ失败重试导致的数据错误\n\n  由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。\n\n- Kerberos认证多HBase集群错误\n\n  再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。\n\n- JVM方法区OOM\n\n  由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。\n\n- DNS导致HBase Region不可用\n\n  由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。\n\n- ......\n\n\n\n# 总结\n\n对于项目面试，首先对项目有自己的认识靠清楚几个问题：\n\n- 是解决什么问题的？\n- 是如何解决的？\n- 解决过程中遇到哪些问题？\n- 问题产生的原因是什么？\n- 如果解决遇到问题的？\n- 为什么这样解决？\n- 如何减少问题发生的？\n- 有哪些调优的经验？\n","slug":"项目介绍之亮点与难点","published":1,"updated":"2022-05-30T02:18:06.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sgl5280004k5h89a2bgtut","content":"<p>面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。</p>\n<h1 id=\"1-项目亮点\"><a href=\"#1-项目亮点\" class=\"headerlink\" title=\"1.项目亮点\"></a>1.项目亮点</h1><p>采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？</p>\n<p>比如：</p>\n<ul>\n<li>针对复杂业务根据模块拆分从而更加灵活</li>\n<li>改为无状态服务解耦</li>\n<li>采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性</li>\n<li>采用了统一网关进行链路追踪方便问题定位以及集中化配置</li>\n<li>采用配置中心提供即时生效的配置更新与完善的权限控制</li>\n<li>统一日志采集提供快速问题定位</li>\n<li>告警系统提供实时邮件提醒</li>\n<li>……</li>\n</ul>\n<h1 id=\"2-项目难点\"><a href=\"#2-项目难点\" class=\"headerlink\" title=\"2.项目难点\"></a>2.项目难点</h1><p>遇到了什么棘手的问题，如何分析定位问题？如果解决？</p>\n<p>比如：</p>\n<ul>\n<li><p>由于MQ失败重试导致的数据错误</p>\n<p>由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。</p>\n</li>\n<li><p>Kerberos认证多HBase集群错误</p>\n<p>再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。</p>\n</li>\n<li><p>JVM方法区OOM</p>\n<p>由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。</p>\n</li>\n<li><p>DNS导致HBase Region不可用</p>\n<p>由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。</p>\n</li>\n<li><p>……</p>\n</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于项目面试，首先对项目有自己的认识靠清楚几个问题：</p>\n<ul>\n<li>是解决什么问题的？</li>\n<li>是如何解决的？</li>\n<li>解决过程中遇到哪些问题？</li>\n<li>问题产生的原因是什么？</li>\n<li>如果解决遇到问题的？</li>\n<li>为什么这样解决？</li>\n<li>如何减少问题发生的？</li>\n<li>有哪些调优的经验？</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。</p>\n<h1 id=\"1-项目亮点\"><a href=\"#1-项目亮点\" class=\"headerlink\" title=\"1.项目亮点\"></a>1.项目亮点</h1><p>采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？</p>\n<p>比如：</p>\n<ul>\n<li>针对复杂业务根据模块拆分从而更加灵活</li>\n<li>改为无状态服务解耦</li>\n<li>采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性</li>\n<li>采用了统一网关进行链路追踪方便问题定位以及集中化配置</li>\n<li>采用配置中心提供即时生效的配置更新与完善的权限控制</li>\n<li>统一日志采集提供快速问题定位</li>\n<li>告警系统提供实时邮件提醒</li>\n<li>……</li>\n</ul>\n<h1 id=\"2-项目难点\"><a href=\"#2-项目难点\" class=\"headerlink\" title=\"2.项目难点\"></a>2.项目难点</h1><p>遇到了什么棘手的问题，如何分析定位问题？如果解决？</p>\n<p>比如：</p>\n<ul>\n<li><p>由于MQ失败重试导致的数据错误</p>\n<p>由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。</p>\n</li>\n<li><p>Kerberos认证多HBase集群错误</p>\n<p>再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。</p>\n</li>\n<li><p>JVM方法区OOM</p>\n<p>由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。</p>\n</li>\n<li><p>DNS导致HBase Region不可用</p>\n<p>由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。</p>\n</li>\n<li><p>……</p>\n</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于项目面试，首先对项目有自己的认识靠清楚几个问题：</p>\n<ul>\n<li>是解决什么问题的？</li>\n<li>是如何解决的？</li>\n<li>解决过程中遇到哪些问题？</li>\n<li>问题产生的原因是什么？</li>\n<li>如果解决遇到问题的？</li>\n<li>为什么这样解决？</li>\n<li>如何减少问题发生的？</li>\n<li>有哪些调优的经验？</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-05-29T01:02:12.477Z","updated":"2022-05-29T01:02:12.477Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sgl52a0006k5h8cojtcfdr","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl3sgl5270003k5h84svw4e7t","tag_id":"cl3sgl5290005k5h8cumdhbvv","_id":"cl3sgl52b0008k5h867d0g9d1"},{"post_id":"cl3sgl5280004k5h89a2bgtut","tag_id":"cl3sgl52b0007k5h8c08p59e7","_id":"cl3sgl52c0009k5h86n8jh2f5"}],"Tag":[{"name":"面试 Java 基础","_id":"cl3sgl5290005k5h8cumdhbvv"},{"name":"面试 项目","_id":"cl3sgl52b0007k5h8c08p59e7"}]}}