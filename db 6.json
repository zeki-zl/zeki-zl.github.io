{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"73751f2936faa4326ce922bb168733b22e5c00fa","modified":1653798473418},{"_id":"source/_posts/Java-基础.md","hash":"bbe6a382d098fd10421ae0caf0a9531aa0a5c4cd","modified":1653901228742},{"_id":"source/_posts/How-to-use-hexo.md","hash":"b2a4c4621457089347ec5fcf18761fd86ada9c1f","modified":1653904329576},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1653786132477},{"_id":"source/_posts/项目介绍之亮点与难点.md","hash":"600edecb594a29b8b7c4cfaad8209ddf5b4d5e0b","modified":1653901399647},{"_id":"source/about/index.md","hash":"c24cce0ca0b8920918f603acdb8c4d40a911a6e7","modified":1653798028086},{"_id":"source/categories/index.md","hash":"cfd06b397ade247f2181acdf392037b874eeb696","modified":1653900034105},{"_id":"source/tags/index.md","hash":"1c1d62c269f160fadde13e9167902943c1ef5614","modified":1653900548972},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1627608806000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1627608806000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1627608806000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1627608806000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1627608806000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1627608806000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1627608806000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1627608806000},{"_id":"themes/next/_config.yml","hash":"0e542a6784929ef8182d13faf59216fd1c854c8d","modified":1653901870275},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1627608806000},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1627608806000},{"_id":"themes/next/package.json","hash":"fcb1963192a2b93388b581b339a31900784adcfc","modified":1653903394585},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1627608806000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1627608806000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1627608806000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1627608806000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1627608806000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1627608806000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1627608806000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1627608806000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1627608806000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1627608806000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1627608806000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1627608806000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1627608806000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1627608806000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1627608806000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1627608806000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1627608806000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1627608806000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1627608806000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1627608806000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1627608806000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1627608806000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1627608806000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1627608806000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1627608806000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1627608806000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1627608806000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1627608806000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1627608806000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1627608806000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1627608806000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1627608806000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1627608806000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1627608806000},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1627608806000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1627608806000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1627608806000},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1627608806000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1627608806000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1627608806000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1627608806000},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1627608806000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1627608806000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1627608806000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1627608806000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1627608806000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1627608806000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1627608806000},{"_id":"themes/next/source/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1653900378401},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1627608806000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1627608806000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1627608806000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1627608806000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1627608806000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1627608806000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1627608806000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1627608806000},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1627608806000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1627608806000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1627608806000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1627608806000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1627608806000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1627608806000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1627608806000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1627608806000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1627608806000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1627608806000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1627608806000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1627608806000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1627608806000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1627608806000},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1627608806000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1627608806000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1627608806000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1627608806000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1627608806000},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1627608806000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1627608806000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1627608806000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1627608806000},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1627608806000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1627608806000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1627608806000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1627608806000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1627608806000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1627608806000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1627608806000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1627608806000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1627608806000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1627608806000},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1627608806000},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1627608806000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1627608806000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1627608806000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1627608806000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1627608806000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1627608806000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1627608806000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1627608806000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1627608806000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1627608806000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1627608806000},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1627608806000},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1627608806000},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1627608806000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1627608806000},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1627608806000},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1627608806000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1627608806000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1627608806000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1627608806000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1627608806000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1627608806000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1627608806000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1627608806000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1627608806000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1627608806000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1627608806000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1627608806000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1627608806000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1627608806000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1627608806000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1627608806000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1627608806000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1627608806000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1627608806000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1627608806000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1627608806000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1627608806000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1627608806000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1627608806000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1627608806000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1627608806000},{"_id":"themes/next/package-lock.json","hash":"784fc41172aa9b71ba5cff73f5bbaa5a08f8c590","modified":1653903394584},{"_id":"public/search.xml","hash":"272d5c160078acbfe02da845499c2170ab21cfec","modified":1653904568627},{"_id":"public/404/index.html","hash":"ddb7ab88a21c0655a84777dcb714d7a50c6c8714","modified":1653904568627},{"_id":"public/categories/index.html","hash":"ff68e5d43fe4e4efca547058cfd65b4c539b1bec","modified":1653904568627},{"_id":"public/tags/index.html","hash":"d37a28eefcd19c98033530b0481ba96ee29aa17c","modified":1653904568627},{"_id":"public/about/index.html","hash":"bf0ae185d132f0e46667a9059a655b6df2537d8b","modified":1653904568627},{"_id":"public/2022/05/29/How-to-use-hexo/index.html","hash":"8da70ba0aaa1a7af24ffdf8a8d433af0ccf16366","modified":1653904568627},{"_id":"public/2022/05/29/hello-world/index.html","hash":"5053d3989d766cf6720d3f1a989ded330a09b20f","modified":1653904568627},{"_id":"public/archives/index.html","hash":"715f2bb9f66ed6d27df8c701ed7b47a1cdd21e1c","modified":1653904568627},{"_id":"public/archives/2022/index.html","hash":"905fd230790395f1ea1ab9a46f4b59fb621cabc2","modified":1653904568627},{"_id":"public/archives/2022/05/index.html","hash":"dfb5c33201dbecdc8930d52e8ff88fcfb06b1ebc","modified":1653904568627},{"_id":"public/tags/面试/index.html","hash":"f3d6f8aacb6c8de38ef3755b43c1b5a1f97e6ef8","modified":1653904568627},{"_id":"public/tags/Java/index.html","hash":"5ad4dd77b6236a4fe2e0847032c650b892878da2","modified":1653904568627},{"_id":"public/tags/基础/index.html","hash":"a07147753f69c6995fa0868c2cee9def3da1a8ac","modified":1653904568627},{"_id":"public/tags/hexo/index.html","hash":"1fdabace14ce6a8a767b3c0cee5d6324c142c0c1","modified":1653904568627},{"_id":"public/tags/blog/index.html","hash":"4e29f3a97d52c0126b6caf7dd5a324181a7df58c","modified":1653904568627},{"_id":"public/tags/工具/index.html","hash":"ec9bfbd304b3ae7fe5e3ffeadb778d56c7256eb9","modified":1653904568627},{"_id":"public/tags/项目/index.html","hash":"0c1cedce6146f5ba28bb3aa8f2272ab5a696c101","modified":1653904568627},{"_id":"public/2022/05/30/Java-基础/index.html","hash":"532dc3336945c19dfc9d5bd4277fb7b9b8c096dd","modified":1653904568627},{"_id":"public/2022/05/30/项目介绍之亮点与难点/index.html","hash":"7d5cc09e50e283308782a8fb40b6874ea80a0dbc","modified":1653904568627},{"_id":"public/index.html","hash":"fb5e5826d692ca8df2a138eb8249f2a278188226","modified":1653904568627},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1653904568627},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1653904568627},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1653904568627},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1653904568627},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1653904568627},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1653904568627},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1653904568627},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1653904568627},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1653904568627},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1653904568627},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1653904568627},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1653904568627},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1653904568627},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1653904568627},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1653904568627},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1653904568627},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1653904568627},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1653904568627},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1653904568627},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1653904568627},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1653904568627},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1653904568627},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1653904568627},{"_id":"public/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1653904568627},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1653904568627},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1653904568627},{"_id":"public/css/main.css","hash":"2608b05723e81d6eb0f21f8c442996f3beb1f9bb","modified":1653904568627},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1653904568627},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1653904568627},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1653904568627}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2022-05-29T04:27:32.000Z","_content":"\nNOT FOUND!\n","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2022-05-29 12:27:32\n---\n\nNOT FOUND!\n","updated":"2022-05-29T04:27:53.418Z","path":"404/index.html","comments":1,"layout":"page","_id":"cl3sk2sr200003ch8goqtavgm","content":"<p>NOT FOUND!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>NOT FOUND!</p>\n"},{"title":"categories","date":"2022-05-30T08:38:10.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-05-30 16:38:10\ntype: \"categories\"\n---\n","updated":"2022-05-30T08:40:34.105Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl3sk2sr700023ch876vwct7h","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2022-05-30T08:40:48.000Z","type":"tags","comments":1,"_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-05-30 16:40:48\ntype: \"tags\"\ncomments: true\n---\n\n","updated":"2022-05-30T08:49:08.972Z","path":"tags/index.html","layout":"page","_id":"cl3sk2srb00053ch821wo2i4m","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2022-05-29T04:19:04.000Z","_content":"# ABOUT ME\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-05-29 12:19:04\n---\n# ABOUT ME\n","updated":"2022-05-29T04:20:28.086Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl3sk2src00073ch8da4z0nrl","content":"<h1 id=\"ABOUT-ME\"><a href=\"#ABOUT-ME\" class=\"headerlink\" title=\"ABOUT ME\"></a>ABOUT ME</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ABOUT-ME\"><a href=\"#ABOUT-ME\" class=\"headerlink\" title=\"ABOUT ME\"></a>ABOUT ME</h1>"}],"Post":[{"title":"Java 基础","date":"2022-05-30T02:29:11.000Z","_content":"\n# 语言特性\n\n- 面向对象（封装、继承、多态）\n- 跨平台\n- 多线程支持\n- 编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）\n\n\n\n# 基础\n\n1. 基础数据类型\n\n   | 基本类型  | 位数 | 字节 | 默认值  | 取值范围                                   |\n   | --------- | ---- | ---- | ------- | ------------------------------------------ |\n   | `byte`    | 8    | 1    | 0       | -128 ~ 127                                 |\n   | `short`   | 16   | 2    | 0       | -32768 ~ 32767                             |\n   | `int`     | 32   | 4    | 0       | -2147483648 ~ 2147483647                   |\n   | `long`    | 64   | 8    | 0L      | -9223372036854775808 ~ 9223372036854775807 |\n   | `char`    | 16   | 2    | 'u0000' | 0 ~ 65535                                  |\n   | `float`   | 32   | 4    | 0f      | 1.4E-45 ~ 3.4028235E38                     |\n   | `double`  | 64   | 8    | 0d      | 4.9E-324 ~ 1.7976931348623157E308          |\n   | `boolean` | 1    |      | false   | true、false                                |\n\n   注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。\n\n2. 自动拆装箱\n\n   装箱其实就是调用了 包装类的`valueOf()`方法，拆箱其实就是调用了 `xxxValue()`方法。\n\n   1. **装箱**：将基本类型用它们对应的引用类型包装起来；\n   2. **拆箱**：将包装类型转换为基本数据类型；\n\n3. 局部变量与成员变量\n\n   局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；\n\n   成员变量通常在堆中，随对象创建而存在。有默认值。\n\n4. 集合\n\n   List，Map，Set以及线程安全相关集合\n\n   集合操作参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\n\n5. 并发\n\n6. 异常\n\n   共同祖先：java.lang.Throwable\n\n   重要子类：Exception与Error\n\n   **`Exception`** ：程序本身可以处理的异常，可以通过 `catch` 来进行捕获。`Exception` 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。\n\n   - Checked Excpetion:\n     - IOException\n     - ClassNotFoundException\n     - SQLException\n     - FileNotFoundException\n   - Unchecked Exception:\n     - ArithmeticException\n     - ClassCastException\n     - NullPointException\n     - IllegalThreadStateException\n     - IndexOutOfBoundsException\n\n   **`Error`**：`Error` 属于程序无法处理的错误 ，~~我们没办法通过 `catch` 来进行捕获~~不建议通过`catch`捕获 。例如 Java 虚拟机运行错误（`Virtual MachineError`）、虚拟机内存不够错误(`OutOfMemoryError`)、类定义错误（`NoClassDefFoundError`）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n\n   - OutOfMemoryError\n   - StackOverFlowError\n   - AssertionError\n   - VritualMachineError\n\n   注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。\n\n   JVM官方文档明确提到：\n\n   If the `try` clause executes a *return*, the compiled code does the following:\n\n   1. Saves the return value (if any) in a local variable.\n   2. Executes a *jsr* to the code for the `finally` clause.\n   3. Upon return from the `finally` clause, returns the value saved in the local variable.\n\n   异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。\n\n7. 泛型\n\n   一套工具适配多种类型\n\n   提供编译时检查避免错误\n\n   泛型擦出：运行时泛型会去掉\n\n8. 反射\n\n   优点：灵活\n\n   缺点：性能问题，参考：https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\n\n   应用场景：各种框架配置与调用都有用到反射。\n\n9. IO\n\n   操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 **用户空间（User space）** 和 **内核空间（Kernel space ）** 。\n\n   **从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。**\n\n   UNIX 系统下， IO 模型一共有 5 种： **同步阻塞 I/O**、**同步非阻塞 I/O**、**I/O 多路复用**、**信号驱动 I/O** 和**异步 I/O**。\n\n   - BIO\n\n     - 同步阻塞 I/O\n\n       阻塞每次读写，等到内核态数据拷贝完成返回。\n\n     - 同步非阻塞 I/O\n\n       多次读取不阻塞，内核态数据拷贝时时阻塞。\n\n   - NIO\n\n     - select \n\n       维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。\n\n       ```c\n       int select(int nfds, fd_set *readfds, fd_set *writefds,\n                  fd_set *exceptfds, struct timeval *timeout);\n       ```\n\n       \n\n     - pool 同select，但是无最大文件描述符限制\n\n       ```c\n       int poll(struct pollfd fds[], nfds_t nfds, int timeout)；\n       ```\n\n       \n\n     - epool\n\n       基于事件\n\n       ```c\n       struct epitem {\n         struct rb_node  rbn;      \n         struct list_head  rdllink; \n         struct epitem  *next;      \n         struct epoll_filefd  ffd;  \n         int  nwait;                 \n         struct list_head  pwqlist;  \n         struct eventpoll  *ep;      \n         struct list_head  fllink;   \n         struct epoll_event  event;  \n       };\n       \n       struct eventpoll {\n         spin_lock_t       lock; \n         struct mutex      mtx;  \n         wait_queue_head_t     wq; \n         wait_queue_head_t   poll_wait; \n         struct list_head    rdllist;   //就绪链表\n         struct rb_root      rbr;      //红黑树根节点 \n         struct epitem      *ovflist;\n       };\n       \n       //用户数据载体\n       typedef union epoll_data {\n          void    *ptr;\n          int      fd;\n          uint32_t u32;\n          uint64_t u64;\n       } epoll_data_t;\n       //fd装载入内核的载体\n        struct epoll_event {\n            uint32_t     events;    /* Epoll events */\n            epoll_data_t data;      /* User data variable */\n        };\n        //三板斧api\n       int epoll_create(int size); \n       int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);  \n       int epoll_wait(int epfd, struct epoll_event *events,\n                        int maxevents, int timeout);\n       ```\n\n       \n\n   - AIO\n\n     拿回数据异步\n\n   参考链接：https://www.jianshu.com/p/722819425dbd\n\n   \n\n   10. JVM\n\n       可以先看看这个：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\n\n       \n\n       - 内存分配\n\n       堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。\n\n       栈：本地方法栈、虚拟机栈以及程序计数器\n\n       方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。\n\n       参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\n\n       \n\n       - 对象创建流程\n\n         1. 类加载\n\n            检查是否已加载过，如果没有进行类加载\n\n         2. 申请内存\n\n            类加载完成即可确定需要的内存，随后便申请内存分配\n\n            分配策略：\n\n            - 指针碰撞\n\n              维护一个指针，区分已使用空间与未使用空间。\n\n            - 空闲列表\n\n              维护一个列表，记录哪些内存块可用\n\n            并发分配内存：\n\n            - CAS+失败重试：通过CAS保证操作原子性\n            - TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。\n\n         3. 类初始化\n\n            - 初始化零值\n\n              设置初始值，对象头不调整\n\n            - 设置对象头\n\n              **虚拟机要对对象进行必要的设置**，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 **这些信息存放在对象头中。** 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。\n\n            - init方法执行\n\n       - 对象内存布局\n\n         对象头，实例数据，对齐填充\n\n         **Hotspot 虚拟机的对象头包括两部分信息**，**第一部分用于存储对象自身的运行时数据**（哈希码、GC 分代年龄、锁状态标志等等），**另一部分是类型指针**，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。\n\n         **实例数据部分是对象真正存储的有效信息**，也是在程序中所定义的各种类型的字段内容。\n\n         **对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。** 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。\n\n         \n\n       - 对象访问方式\n\n         句柄和直接指针\n\n         - 句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）\n\n         - 直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针\n\n         优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。\n\n       - 类加载模型\n\n         双亲委托\n\n         如果自定义类加载器：继承`ClassLoader`，重写`findClass()`方法，如果需要打破双亲委托，则需要重写`loadClass()`方法\n\n       - JVM参数与优化\n\n         参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\n\n# 面试问题整理\n\n1. 字符型常量与字符串常量的区别？\n\n   字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节\n\n2. 重写遵循规范\n\n   1. 方法名，形参需要相同\n   2. 返回值类型以及声明异常均小于或等于父类方法\n   3. 访问权限需大于或等于父类方法\n\n3. 可变长参数\n\n   可以传入不等长参数：\n\n   ```java\n   public static void method(String... args) {\n      //......\n   }\n   ```\n\n   需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法\n\n   \n\n   \n\n4. 基本数据类型与包装类的区别？\n\n   1. 包装类型默认值null\n   2. 包装类型可用于泛型\n   3. 基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中\n\n5. 构造方否可以override？\n\n   不能override，可以overload\n\n6. java 9为何将String底层由 char[] 改成了 byte[] ?\n\n   新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，`byte` 占一个字节(8 位)，`char` 占用 2 个字节（16），`byte` 相较 `char` 节省一半的内存空间。\n\n7. String采用运算符“+”拼接为何耗费内存？\n\n   内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。\n\n8. 字符串常量池什么作用？\n\n   创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。\n\n9. intern方法作用\n\n   native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。\n\n10. 常量折叠\n\n    对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化\n\n11. finally代码一定执行吗？\n\n    不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。\n\n12. Java只有值传递吗？\n\n    是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。\n\n13. 通过类加载器与Class.forName()差异\n\n    Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。\n\n14. 精度丢失与BigDecimal\n\n    由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。\n\n    \n\n    \n\n\n\n\n\n","source":"_posts/Java-基础.md","raw":"---\ntitle: Java 基础\ndate: 2022-05-30 10:29:11\ntags: \n  - 面试 \n  - Java \n  - 基础\n---\n\n# 语言特性\n\n- 面向对象（封装、继承、多态）\n- 跨平台\n- 多线程支持\n- 编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）\n\n\n\n# 基础\n\n1. 基础数据类型\n\n   | 基本类型  | 位数 | 字节 | 默认值  | 取值范围                                   |\n   | --------- | ---- | ---- | ------- | ------------------------------------------ |\n   | `byte`    | 8    | 1    | 0       | -128 ~ 127                                 |\n   | `short`   | 16   | 2    | 0       | -32768 ~ 32767                             |\n   | `int`     | 32   | 4    | 0       | -2147483648 ~ 2147483647                   |\n   | `long`    | 64   | 8    | 0L      | -9223372036854775808 ~ 9223372036854775807 |\n   | `char`    | 16   | 2    | 'u0000' | 0 ~ 65535                                  |\n   | `float`   | 32   | 4    | 0f      | 1.4E-45 ~ 3.4028235E38                     |\n   | `double`  | 64   | 8    | 0d      | 4.9E-324 ~ 1.7976931348623157E308          |\n   | `boolean` | 1    |      | false   | true、false                                |\n\n   注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。\n\n2. 自动拆装箱\n\n   装箱其实就是调用了 包装类的`valueOf()`方法，拆箱其实就是调用了 `xxxValue()`方法。\n\n   1. **装箱**：将基本类型用它们对应的引用类型包装起来；\n   2. **拆箱**：将包装类型转换为基本数据类型；\n\n3. 局部变量与成员变量\n\n   局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；\n\n   成员变量通常在堆中，随对象创建而存在。有默认值。\n\n4. 集合\n\n   List，Map，Set以及线程安全相关集合\n\n   集合操作参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\n\n5. 并发\n\n6. 异常\n\n   共同祖先：java.lang.Throwable\n\n   重要子类：Exception与Error\n\n   **`Exception`** ：程序本身可以处理的异常，可以通过 `catch` 来进行捕获。`Exception` 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。\n\n   - Checked Excpetion:\n     - IOException\n     - ClassNotFoundException\n     - SQLException\n     - FileNotFoundException\n   - Unchecked Exception:\n     - ArithmeticException\n     - ClassCastException\n     - NullPointException\n     - IllegalThreadStateException\n     - IndexOutOfBoundsException\n\n   **`Error`**：`Error` 属于程序无法处理的错误 ，~~我们没办法通过 `catch` 来进行捕获~~不建议通过`catch`捕获 。例如 Java 虚拟机运行错误（`Virtual MachineError`）、虚拟机内存不够错误(`OutOfMemoryError`)、类定义错误（`NoClassDefFoundError`）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n\n   - OutOfMemoryError\n   - StackOverFlowError\n   - AssertionError\n   - VritualMachineError\n\n   注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。\n\n   JVM官方文档明确提到：\n\n   If the `try` clause executes a *return*, the compiled code does the following:\n\n   1. Saves the return value (if any) in a local variable.\n   2. Executes a *jsr* to the code for the `finally` clause.\n   3. Upon return from the `finally` clause, returns the value saved in the local variable.\n\n   异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。\n\n7. 泛型\n\n   一套工具适配多种类型\n\n   提供编译时检查避免错误\n\n   泛型擦出：运行时泛型会去掉\n\n8. 反射\n\n   优点：灵活\n\n   缺点：性能问题，参考：https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\n\n   应用场景：各种框架配置与调用都有用到反射。\n\n9. IO\n\n   操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 **用户空间（User space）** 和 **内核空间（Kernel space ）** 。\n\n   **从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。**\n\n   UNIX 系统下， IO 模型一共有 5 种： **同步阻塞 I/O**、**同步非阻塞 I/O**、**I/O 多路复用**、**信号驱动 I/O** 和**异步 I/O**。\n\n   - BIO\n\n     - 同步阻塞 I/O\n\n       阻塞每次读写，等到内核态数据拷贝完成返回。\n\n     - 同步非阻塞 I/O\n\n       多次读取不阻塞，内核态数据拷贝时时阻塞。\n\n   - NIO\n\n     - select \n\n       维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。\n\n       ```c\n       int select(int nfds, fd_set *readfds, fd_set *writefds,\n                  fd_set *exceptfds, struct timeval *timeout);\n       ```\n\n       \n\n     - pool 同select，但是无最大文件描述符限制\n\n       ```c\n       int poll(struct pollfd fds[], nfds_t nfds, int timeout)；\n       ```\n\n       \n\n     - epool\n\n       基于事件\n\n       ```c\n       struct epitem {\n         struct rb_node  rbn;      \n         struct list_head  rdllink; \n         struct epitem  *next;      \n         struct epoll_filefd  ffd;  \n         int  nwait;                 \n         struct list_head  pwqlist;  \n         struct eventpoll  *ep;      \n         struct list_head  fllink;   \n         struct epoll_event  event;  \n       };\n       \n       struct eventpoll {\n         spin_lock_t       lock; \n         struct mutex      mtx;  \n         wait_queue_head_t     wq; \n         wait_queue_head_t   poll_wait; \n         struct list_head    rdllist;   //就绪链表\n         struct rb_root      rbr;      //红黑树根节点 \n         struct epitem      *ovflist;\n       };\n       \n       //用户数据载体\n       typedef union epoll_data {\n          void    *ptr;\n          int      fd;\n          uint32_t u32;\n          uint64_t u64;\n       } epoll_data_t;\n       //fd装载入内核的载体\n        struct epoll_event {\n            uint32_t     events;    /* Epoll events */\n            epoll_data_t data;      /* User data variable */\n        };\n        //三板斧api\n       int epoll_create(int size); \n       int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);  \n       int epoll_wait(int epfd, struct epoll_event *events,\n                        int maxevents, int timeout);\n       ```\n\n       \n\n   - AIO\n\n     拿回数据异步\n\n   参考链接：https://www.jianshu.com/p/722819425dbd\n\n   \n\n   10. JVM\n\n       可以先看看这个：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\n\n       \n\n       - 内存分配\n\n       堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。\n\n       栈：本地方法栈、虚拟机栈以及程序计数器\n\n       方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。\n\n       参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\n\n       \n\n       - 对象创建流程\n\n         1. 类加载\n\n            检查是否已加载过，如果没有进行类加载\n\n         2. 申请内存\n\n            类加载完成即可确定需要的内存，随后便申请内存分配\n\n            分配策略：\n\n            - 指针碰撞\n\n              维护一个指针，区分已使用空间与未使用空间。\n\n            - 空闲列表\n\n              维护一个列表，记录哪些内存块可用\n\n            并发分配内存：\n\n            - CAS+失败重试：通过CAS保证操作原子性\n            - TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。\n\n         3. 类初始化\n\n            - 初始化零值\n\n              设置初始值，对象头不调整\n\n            - 设置对象头\n\n              **虚拟机要对对象进行必要的设置**，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 **这些信息存放在对象头中。** 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。\n\n            - init方法执行\n\n       - 对象内存布局\n\n         对象头，实例数据，对齐填充\n\n         **Hotspot 虚拟机的对象头包括两部分信息**，**第一部分用于存储对象自身的运行时数据**（哈希码、GC 分代年龄、锁状态标志等等），**另一部分是类型指针**，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。\n\n         **实例数据部分是对象真正存储的有效信息**，也是在程序中所定义的各种类型的字段内容。\n\n         **对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。** 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。\n\n         \n\n       - 对象访问方式\n\n         句柄和直接指针\n\n         - 句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）\n\n         - 直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针\n\n         优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。\n\n       - 类加载模型\n\n         双亲委托\n\n         如果自定义类加载器：继承`ClassLoader`，重写`findClass()`方法，如果需要打破双亲委托，则需要重写`loadClass()`方法\n\n       - JVM参数与优化\n\n         参考：https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\n\n# 面试问题整理\n\n1. 字符型常量与字符串常量的区别？\n\n   字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节\n\n2. 重写遵循规范\n\n   1. 方法名，形参需要相同\n   2. 返回值类型以及声明异常均小于或等于父类方法\n   3. 访问权限需大于或等于父类方法\n\n3. 可变长参数\n\n   可以传入不等长参数：\n\n   ```java\n   public static void method(String... args) {\n      //......\n   }\n   ```\n\n   需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法\n\n   \n\n   \n\n4. 基本数据类型与包装类的区别？\n\n   1. 包装类型默认值null\n   2. 包装类型可用于泛型\n   3. 基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中\n\n5. 构造方否可以override？\n\n   不能override，可以overload\n\n6. java 9为何将String底层由 char[] 改成了 byte[] ?\n\n   新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，`byte` 占一个字节(8 位)，`char` 占用 2 个字节（16），`byte` 相较 `char` 节省一半的内存空间。\n\n7. String采用运算符“+”拼接为何耗费内存？\n\n   内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。\n\n8. 字符串常量池什么作用？\n\n   创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。\n\n9. intern方法作用\n\n   native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。\n\n10. 常量折叠\n\n    对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化\n\n11. finally代码一定执行吗？\n\n    不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。\n\n12. Java只有值传递吗？\n\n    是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。\n\n13. 通过类加载器与Class.forName()差异\n\n    Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。\n\n14. 精度丢失与BigDecimal\n\n    由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。\n\n    \n\n    \n\n\n\n\n\n","slug":"Java-基础","published":1,"updated":"2022-05-30T09:00:28.742Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sk2sr400013ch89um62amk","content":"<h1 id=\"语言特性\"><a href=\"#语言特性\" class=\"headerlink\" title=\"语言特性\"></a>语言特性</h1><ul>\n<li>面向对象（封装、继承、多态）</li>\n<li>跨平台</li>\n<li>多线程支持</li>\n<li>编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）</li>\n</ul>\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><ol>\n<li><p>基础数据类型</p>\n<table>\n<thead>\n<tr>\n<th>基本类型</th>\n<th>位数</th>\n<th>字节</th>\n<th>默认值</th>\n<th>取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>byte</code></td>\n<td>8</td>\n<td>1</td>\n<td>0</td>\n<td>-128 ~ 127</td>\n</tr>\n<tr>\n<td><code>short</code></td>\n<td>16</td>\n<td>2</td>\n<td>0</td>\n<td>-32768 ~ 32767</td>\n</tr>\n<tr>\n<td><code>int</code></td>\n<td>32</td>\n<td>4</td>\n<td>0</td>\n<td>-2147483648 ~ 2147483647</td>\n</tr>\n<tr>\n<td><code>long</code></td>\n<td>64</td>\n<td>8</td>\n<td>0L</td>\n<td>-9223372036854775808 ~ 9223372036854775807</td>\n</tr>\n<tr>\n<td><code>char</code></td>\n<td>16</td>\n<td>2</td>\n<td>‘u0000’</td>\n<td>0 ~ 65535</td>\n</tr>\n<tr>\n<td><code>float</code></td>\n<td>32</td>\n<td>4</td>\n<td>0f</td>\n<td>1.4E-45 ~ 3.4028235E38</td>\n</tr>\n<tr>\n<td><code>double</code></td>\n<td>64</td>\n<td>8</td>\n<td>0d</td>\n<td>4.9E-324 ~ 1.7976931348623157E308</td>\n</tr>\n<tr>\n<td><code>boolean</code></td>\n<td>1</td>\n<td></td>\n<td>false</td>\n<td>true、false</td>\n</tr>\n</tbody></table>\n<p>注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。</p>\n</li>\n<li><p>自动拆装箱</p>\n<p>装箱其实就是调用了 包装类的<code>valueOf()</code>方法，拆箱其实就是调用了 <code>xxxValue()</code>方法。</p>\n<ol>\n<li><strong>装箱</strong>：将基本类型用它们对应的引用类型包装起来；</li>\n<li><strong>拆箱</strong>：将包装类型转换为基本数据类型；</li>\n</ol>\n</li>\n<li><p>局部变量与成员变量</p>\n<p>局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；</p>\n<p>成员变量通常在堆中，随对象创建而存在。有默认值。</p>\n</li>\n<li><p>集合</p>\n<p>List，Map，Set以及线程安全相关集合</p>\n<p>集合操作参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md</a></p>\n</li>\n<li><p>并发</p>\n</li>\n<li><p>异常</p>\n<p>共同祖先：java.lang.Throwable</p>\n<p>重要子类：Exception与Error</p>\n<p><strong><code>Exception</code></strong> ：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。</p>\n<ul>\n<li>Checked Excpetion:<ul>\n<li>IOException</li>\n<li>ClassNotFoundException</li>\n<li>SQLException</li>\n<li>FileNotFoundException</li>\n</ul>\n</li>\n<li>Unchecked Exception:<ul>\n<li>ArithmeticException</li>\n<li>ClassCastException</li>\n<li>NullPointException</li>\n<li>IllegalThreadStateException</li>\n<li>IndexOutOfBoundsException</li>\n</ul>\n</li>\n</ul>\n<p>**<code>Error</code>**：<code>Error</code> 属于程序无法处理的错误 ，<del>我们没办法通过 <code>catch</code> 来进行捕获</del>不建议通过<code>catch</code>捕获 。例如 Java 虚拟机运行错误（<code>Virtual MachineError</code>）、虚拟机内存不够错误(<code>OutOfMemoryError</code>)、类定义错误（<code>NoClassDefFoundError</code>）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<ul>\n<li>OutOfMemoryError</li>\n<li>StackOverFlowError</li>\n<li>AssertionError</li>\n<li>VritualMachineError</li>\n</ul>\n<p>注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。</p>\n<p>JVM官方文档明确提到：</p>\n<p>If the <code>try</code> clause executes a <em>return</em>, the compiled code does the following:</p>\n<ol>\n<li>Saves the return value (if any) in a local variable.</li>\n<li>Executes a <em>jsr</em> to the code for the <code>finally</code> clause.</li>\n<li>Upon return from the <code>finally</code> clause, returns the value saved in the local variable.</li>\n</ol>\n<p>异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。</p>\n</li>\n<li><p>泛型</p>\n<p>一套工具适配多种类型</p>\n<p>提供编译时检查避免错误</p>\n<p>泛型擦出：运行时泛型会去掉</p>\n</li>\n<li><p>反射</p>\n<p>优点：灵活</p>\n<p>缺点：性能问题，参考：<a href=\"https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\">https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow</a></p>\n<p>应用场景：各种框架配置与调用都有用到反射。</p>\n</li>\n<li><p>IO</p>\n<p>操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 <strong>用户空间（User space）</strong> 和 <strong>内核空间（Kernel space ）</strong> 。</p>\n<p><strong>从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。</strong></p>\n<p>UNIX 系统下， IO 模型一共有 5 种： <strong>同步阻塞 I&#x2F;O</strong>、<strong>同步非阻塞 I&#x2F;O</strong>、<strong>I&#x2F;O 多路复用</strong>、<strong>信号驱动 I&#x2F;O</strong> 和<strong>异步 I&#x2F;O</strong>。</p>\n<ul>\n<li><p>BIO</p>\n<ul>\n<li><p>同步阻塞 I&#x2F;O</p>\n<p>阻塞每次读写，等到内核态数据拷贝完成返回。</p>\n</li>\n<li><p>同步非阻塞 I&#x2F;O</p>\n<p>多次读取不阻塞，内核态数据拷贝时时阻塞。</p>\n</li>\n</ul>\n</li>\n<li><p>NIO</p>\n<ul>\n<li><p>select </p>\n<p>维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"type\">int</span> nfds, fd_set *readfds, fd_set *writefds,</span></span><br><span class=\"line\"><span class=\"params\">           fd_set *exceptfds, <span class=\"keyword\">struct</span> timeval *timeout)</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>pool 同select，但是无最大文件描述符限制</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">poll</span><span class=\"params\">(<span class=\"keyword\">struct</span> pollfd fds[], <span class=\"type\">nfds_t</span> nfds, <span class=\"type\">int</span> timeout)</span>；</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>epool</p>\n<p>基于事件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span> &#123;</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_node</span>  <span class=\"title\">rbn</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">rdllink</span>;</span> </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>  *<span class=\"title\">next</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_filefd</span>  <span class=\"title\">ffd</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">int</span>  nwait;                 </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">pwqlist</span>;</span>  </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span>  *<span class=\"title\">ep</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">fllink</span>;</span>   </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span>  <span class=\"title\">event</span>;</span>  </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span> &#123;</span></span><br><span class=\"line\">  <span class=\"type\">spin_lock_t</span>       lock; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">mutex</span>      <span class=\"title\">mtx</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>     wq; </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>   poll_wait; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>    <span class=\"title\">rdllist</span>;</span>   <span class=\"comment\">//就绪链表</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_root</span>      <span class=\"title\">rbr</span>;</span>      <span class=\"comment\">//红黑树根节点 </span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>      *<span class=\"title\">ovflist</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户数据载体</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">epoll_data</span> &#123;</span></span><br><span class=\"line\">   <span class=\"type\">void</span>    *ptr;</span><br><span class=\"line\">   <span class=\"type\">int</span>      fd;</span><br><span class=\"line\">   <span class=\"type\">uint32_t</span> u32;</span><br><span class=\"line\">   <span class=\"type\">uint64_t</span> u64;</span><br><span class=\"line\">&#125; <span class=\"type\">epoll_data_t</span>;</span><br><span class=\"line\"><span class=\"comment\">//fd装载入内核的载体</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span> &#123;</span></span><br><span class=\"line\">     <span class=\"type\">uint32_t</span>     events;    <span class=\"comment\">/* Epoll events */</span></span><br><span class=\"line\">     <span class=\"type\">epoll_data_t</span> data;      <span class=\"comment\">/* User data variable */</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> <span class=\"comment\">//三板斧api</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_create</span><span class=\"params\">(<span class=\"type\">int</span> size)</span>; </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_ctl</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"type\">int</span> op, <span class=\"type\">int</span> fd, <span class=\"keyword\">struct</span> epoll_event *event)</span>;  </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_wait</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"keyword\">struct</span> epoll_event *events,</span></span><br><span class=\"line\"><span class=\"params\">                 <span class=\"type\">int</span> maxevents, <span class=\"type\">int</span> timeout)</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>AIO</p>\n<p>拿回数据异步</p>\n</li>\n</ul>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/722819425dbd\">https://www.jianshu.com/p/722819425dbd</a></p>\n<ol start=\"10\">\n<li><p>JVM</p>\n<p>可以先看看这个：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md</a></p>\n<ul>\n<li>内存分配</li>\n</ul>\n<p>堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。</p>\n<p>栈：本地方法栈、虚拟机栈以及程序计数器</p>\n<p>方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md</a></p>\n<ul>\n<li><p>对象创建流程</p>\n<ol>\n<li><p>类加载</p>\n<p>检查是否已加载过，如果没有进行类加载</p>\n</li>\n<li><p>申请内存</p>\n<p>类加载完成即可确定需要的内存，随后便申请内存分配</p>\n<p>分配策略：</p>\n<ul>\n<li><p>指针碰撞</p>\n<p>维护一个指针，区分已使用空间与未使用空间。</p>\n</li>\n<li><p>空闲列表</p>\n<p>维护一个列表，记录哪些内存块可用</p>\n</li>\n</ul>\n<p>并发分配内存：</p>\n<ul>\n<li>CAS+失败重试：通过CAS保证操作原子性</li>\n<li>TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。</li>\n</ul>\n</li>\n<li><p>类初始化</p>\n<ul>\n<li><p>初始化零值</p>\n<p>设置初始值，对象头不调整</p>\n</li>\n<li><p>设置对象头</p>\n<p><strong>虚拟机要对对象进行必要的设置</strong>，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 <strong>这些信息存放在对象头中。</strong> 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。</p>\n</li>\n<li><p>init方法执行</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>对象内存布局</p>\n<p>对象头，实例数据，对齐填充</p>\n<p><strong>Hotspot 虚拟机的对象头包括两部分信息</strong>，<strong>第一部分用于存储对象自身的运行时数据</strong>（哈希码、GC 分代年龄、锁状态标志等等），<strong>另一部分是类型指针</strong>，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。</p>\n<p><strong>实例数据部分是对象真正存储的有效信息</strong>，也是在程序中所定义的各种类型的字段内容。</p>\n<p><strong>对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。</strong> 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</p>\n</li>\n<li><p>对象访问方式</p>\n<p>句柄和直接指针</p>\n<ul>\n<li><p>句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）</p>\n</li>\n<li><p>直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针</p>\n</li>\n</ul>\n<p>优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。</p>\n</li>\n<li><p>类加载模型</p>\n<p>双亲委托</p>\n<p>如果自定义类加载器：继承<code>ClassLoader</code>，重写<code>findClass()</code>方法，如果需要打破双亲委托，则需要重写<code>loadClass()</code>方法</p>\n</li>\n<li><p>JVM参数与优化</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md</a></p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"面试问题整理\"><a href=\"#面试问题整理\" class=\"headerlink\" title=\"面试问题整理\"></a>面试问题整理</h1><ol>\n<li><p>字符型常量与字符串常量的区别？</p>\n<p>字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节</p>\n</li>\n<li><p>重写遵循规范</p>\n<ol>\n<li>方法名，形参需要相同</li>\n<li>返回值类型以及声明异常均小于或等于父类方法</li>\n<li>访问权限需大于或等于父类方法</li>\n</ol>\n</li>\n<li><p>可变长参数</p>\n<p>可以传入不等长参数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//......</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法</p>\n</li>\n<li><p>基本数据类型与包装类的区别？</p>\n<ol>\n<li>包装类型默认值null</li>\n<li>包装类型可用于泛型</li>\n<li>基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中</li>\n</ol>\n</li>\n<li><p>构造方否可以override？</p>\n<p>不能override，可以overload</p>\n</li>\n<li><p>java 9为何将String底层由 char[] 改成了 byte[] ?</p>\n<p>新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，<code>byte</code> 占一个字节(8 位)，<code>char</code> 占用 2 个字节（16），<code>byte</code> 相较 <code>char</code> 节省一半的内存空间。</p>\n</li>\n<li><p>String采用运算符“+”拼接为何耗费内存？</p>\n<p>内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。</p>\n</li>\n<li><p>字符串常量池什么作用？</p>\n<p>创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。</p>\n</li>\n<li><p>intern方法作用</p>\n<p>native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。</p>\n</li>\n<li><p>常量折叠</p>\n<p>对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化</p>\n</li>\n<li><p>finally代码一定执行吗？</p>\n<p>不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。</p>\n</li>\n<li><p>Java只有值传递吗？</p>\n<p>是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。</p>\n</li>\n<li><p>通过类加载器与Class.forName()差异</p>\n<p>Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。</p>\n</li>\n<li><p>精度丢失与BigDecimal</p>\n<p>由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"语言特性\"><a href=\"#语言特性\" class=\"headerlink\" title=\"语言特性\"></a>语言特性</h1><ul>\n<li>面向对象（封装、继承、多态）</li>\n<li>跨平台</li>\n<li>多线程支持</li>\n<li>编译与解释执行（class文件编译与JIT即时编译（编译为机器码），JVM执行时解释执行）</li>\n</ul>\n<h1 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h1><ol>\n<li><p>基础数据类型</p>\n<table>\n<thead>\n<tr>\n<th>基本类型</th>\n<th>位数</th>\n<th>字节</th>\n<th>默认值</th>\n<th>取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>byte</code></td>\n<td>8</td>\n<td>1</td>\n<td>0</td>\n<td>-128 ~ 127</td>\n</tr>\n<tr>\n<td><code>short</code></td>\n<td>16</td>\n<td>2</td>\n<td>0</td>\n<td>-32768 ~ 32767</td>\n</tr>\n<tr>\n<td><code>int</code></td>\n<td>32</td>\n<td>4</td>\n<td>0</td>\n<td>-2147483648 ~ 2147483647</td>\n</tr>\n<tr>\n<td><code>long</code></td>\n<td>64</td>\n<td>8</td>\n<td>0L</td>\n<td>-9223372036854775808 ~ 9223372036854775807</td>\n</tr>\n<tr>\n<td><code>char</code></td>\n<td>16</td>\n<td>2</td>\n<td>‘u0000’</td>\n<td>0 ~ 65535</td>\n</tr>\n<tr>\n<td><code>float</code></td>\n<td>32</td>\n<td>4</td>\n<td>0f</td>\n<td>1.4E-45 ~ 3.4028235E38</td>\n</tr>\n<tr>\n<td><code>double</code></td>\n<td>64</td>\n<td>8</td>\n<td>0d</td>\n<td>4.9E-324 ~ 1.7976931348623157E308</td>\n</tr>\n<tr>\n<td><code>boolean</code></td>\n<td>1</td>\n<td></td>\n<td>false</td>\n<td>true、false</td>\n</tr>\n</tbody></table>\n<p>注意：boolean长度为明确。取决于JVM实现，逻辑上是占用1位。</p>\n</li>\n<li><p>自动拆装箱</p>\n<p>装箱其实就是调用了 包装类的<code>valueOf()</code>方法，拆箱其实就是调用了 <code>xxxValue()</code>方法。</p>\n<ol>\n<li><strong>装箱</strong>：将基本类型用它们对应的引用类型包装起来；</li>\n<li><strong>拆箱</strong>：将包装类型转换为基本数据类型；</li>\n</ol>\n</li>\n<li><p>局部变量与成员变量</p>\n<p>局部变量通常在栈中，随方法调用结束而回收。无默认值需设置；</p>\n<p>成员变量通常在堆中，随对象创建而存在。有默认值。</p>\n</li>\n<li><p>集合</p>\n<p>List，Map，Set以及线程安全相关集合</p>\n<p>集合操作参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/collection/java-collection-precautions-for-use.md</a></p>\n</li>\n<li><p>并发</p>\n</li>\n<li><p>异常</p>\n<p>共同祖先：java.lang.Throwable</p>\n<p>重要子类：Exception与Error</p>\n<p><strong><code>Exception</code></strong> ：程序本身可以处理的异常，可以通过 <code>catch</code> 来进行捕获。<code>Exception</code> 又可以分为 Checked Exception (受检查异常，必须处理) 和 Unchecked Exception (不受检查异常，可以不处理)。</p>\n<ul>\n<li>Checked Excpetion:<ul>\n<li>IOException</li>\n<li>ClassNotFoundException</li>\n<li>SQLException</li>\n<li>FileNotFoundException</li>\n</ul>\n</li>\n<li>Unchecked Exception:<ul>\n<li>ArithmeticException</li>\n<li>ClassCastException</li>\n<li>NullPointException</li>\n<li>IllegalThreadStateException</li>\n<li>IndexOutOfBoundsException</li>\n</ul>\n</li>\n</ul>\n<p>**<code>Error</code>**：<code>Error</code> 属于程序无法处理的错误 ，<del>我们没办法通过 <code>catch</code> 来进行捕获</del>不建议通过<code>catch</code>捕获 。例如 Java 虚拟机运行错误（<code>Virtual MachineError</code>）、虚拟机内存不够错误(<code>OutOfMemoryError</code>)、类定义错误（<code>NoClassDefFoundError</code>）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<ul>\n<li>OutOfMemoryError</li>\n<li>StackOverFlowError</li>\n<li>AssertionError</li>\n<li>VritualMachineError</li>\n</ul>\n<p>注意：不要再finally中使用return！在try中return返回值会放在一个本地变量中，后续执行到finally中的return，会覆盖并返回。</p>\n<p>JVM官方文档明确提到：</p>\n<p>If the <code>try</code> clause executes a <em>return</em>, the compiled code does the following:</p>\n<ol>\n<li>Saves the return value (if any) in a local variable.</li>\n<li>Executes a <em>jsr</em> to the code for the <code>finally</code> clause.</li>\n<li>Upon return from the <code>finally</code> clause, returns the value saved in the local variable.</li>\n</ol>\n<p>异常使用规范：异常信息有意义；日志打印异常与抛出异常不要并存。</p>\n</li>\n<li><p>泛型</p>\n<p>一套工具适配多种类型</p>\n<p>提供编译时检查避免错误</p>\n<p>泛型擦出：运行时泛型会去掉</p>\n</li>\n<li><p>反射</p>\n<p>优点：灵活</p>\n<p>缺点：性能问题，参考：<a href=\"https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow\">https://stackoverflow.com/questions/1392351/java-reflection-why-is-it-so-slow</a></p>\n<p>应用场景：各种框架配置与调用都有用到反射。</p>\n</li>\n<li><p>IO</p>\n<p>操作系统相关的知识：为了保证操作系统的稳定性和安全性，一个进程的地址空间划分为 <strong>用户空间（User space）</strong> 和 <strong>内核空间（Kernel space ）</strong> 。</p>\n<p><strong>从应用程序的视角来看的话，我们的应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。也就是说，我们的应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。</strong></p>\n<p>UNIX 系统下， IO 模型一共有 5 种： <strong>同步阻塞 I&#x2F;O</strong>、<strong>同步非阻塞 I&#x2F;O</strong>、<strong>I&#x2F;O 多路复用</strong>、<strong>信号驱动 I&#x2F;O</strong> 和<strong>异步 I&#x2F;O</strong>。</p>\n<ul>\n<li><p>BIO</p>\n<ul>\n<li><p>同步阻塞 I&#x2F;O</p>\n<p>阻塞每次读写，等到内核态数据拷贝完成返回。</p>\n</li>\n<li><p>同步非阻塞 I&#x2F;O</p>\n<p>多次读取不阻塞，内核态数据拷贝时时阻塞。</p>\n</li>\n</ul>\n</li>\n<li><p>NIO</p>\n<ul>\n<li><p>select </p>\n<p>维护很多socket连接（创建链接时维护socket集合），通过询问内核是否已准备好数据，如果准备好再发器read（读取过程依旧是阻塞的），内核轮询socket集合，找到准备完成的socket进行数据读取（可能只有部分socket活跃，每次轮训耗时长且无意义）。每次需要将socket集合传递给内核，有一定开销。进程被唤醒拿到相应还需要遍历确定哪个socket收到数据，共需要两次遍历。select有最大文件描述符数量限制。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"type\">int</span> nfds, fd_set *readfds, fd_set *writefds,</span></span><br><span class=\"line\"><span class=\"params\">           fd_set *exceptfds, <span class=\"keyword\">struct</span> timeval *timeout)</span>;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>pool 同select，但是无最大文件描述符限制</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">poll</span><span class=\"params\">(<span class=\"keyword\">struct</span> pollfd fds[], <span class=\"type\">nfds_t</span> nfds, <span class=\"type\">int</span> timeout)</span>；</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>epool</p>\n<p>基于事件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span> &#123;</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_node</span>  <span class=\"title\">rbn</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">rdllink</span>;</span> </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>  *<span class=\"title\">next</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_filefd</span>  <span class=\"title\">ffd</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">int</span>  nwait;                 </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">pwqlist</span>;</span>  </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span>  *<span class=\"title\">ep</span>;</span>      </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>  <span class=\"title\">fllink</span>;</span>   </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span>  <span class=\"title\">event</span>;</span>  </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">eventpoll</span> &#123;</span></span><br><span class=\"line\">  <span class=\"type\">spin_lock_t</span>       lock; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">mutex</span>      <span class=\"title\">mtx</span>;</span>  </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>     wq; </span><br><span class=\"line\">  <span class=\"type\">wait_queue_head_t</span>   poll_wait; </span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">list_head</span>    <span class=\"title\">rdllist</span>;</span>   <span class=\"comment\">//就绪链表</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">rb_root</span>      <span class=\"title\">rbr</span>;</span>      <span class=\"comment\">//红黑树根节点 </span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epitem</span>      *<span class=\"title\">ovflist</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户数据载体</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">union</span> <span class=\"title\">epoll_data</span> &#123;</span></span><br><span class=\"line\">   <span class=\"type\">void</span>    *ptr;</span><br><span class=\"line\">   <span class=\"type\">int</span>      fd;</span><br><span class=\"line\">   <span class=\"type\">uint32_t</span> u32;</span><br><span class=\"line\">   <span class=\"type\">uint64_t</span> u64;</span><br><span class=\"line\">&#125; <span class=\"type\">epoll_data_t</span>;</span><br><span class=\"line\"><span class=\"comment\">//fd装载入内核的载体</span></span><br><span class=\"line\"> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">epoll_event</span> &#123;</span></span><br><span class=\"line\">     <span class=\"type\">uint32_t</span>     events;    <span class=\"comment\">/* Epoll events */</span></span><br><span class=\"line\">     <span class=\"type\">epoll_data_t</span> data;      <span class=\"comment\">/* User data variable */</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> <span class=\"comment\">//三板斧api</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_create</span><span class=\"params\">(<span class=\"type\">int</span> size)</span>; </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_ctl</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"type\">int</span> op, <span class=\"type\">int</span> fd, <span class=\"keyword\">struct</span> epoll_event *event)</span>;  </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">epoll_wait</span><span class=\"params\">(<span class=\"type\">int</span> epfd, <span class=\"keyword\">struct</span> epoll_event *events,</span></span><br><span class=\"line\"><span class=\"params\">                 <span class=\"type\">int</span> maxevents, <span class=\"type\">int</span> timeout)</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>AIO</p>\n<p>拿回数据异步</p>\n</li>\n</ul>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/722819425dbd\">https://www.jianshu.com/p/722819425dbd</a></p>\n<ol start=\"10\">\n<li><p>JVM</p>\n<p>可以先看看这个：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-intro.md</a></p>\n<ul>\n<li>内存分配</li>\n</ul>\n<p>堆：eden区，2个suvivor区，old区。对象创建会在eden创建，经过一次回收会搬到suvivor区，后续每经过一次回收对象年龄加一，直到到达老年代阈值（默认15岁），对象进入老年代。老年代阈值会根据配置动态计算。</p>\n<p>栈：本地方法栈、虚拟机栈以及程序计数器</p>\n<p>方法区：加载的类信息以及运行时常量池以及JIT编译代码缓存。字符串常量池与静态变量均在堆中。</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/memory-area.md</a></p>\n<ul>\n<li><p>对象创建流程</p>\n<ol>\n<li><p>类加载</p>\n<p>检查是否已加载过，如果没有进行类加载</p>\n</li>\n<li><p>申请内存</p>\n<p>类加载完成即可确定需要的内存，随后便申请内存分配</p>\n<p>分配策略：</p>\n<ul>\n<li><p>指针碰撞</p>\n<p>维护一个指针，区分已使用空间与未使用空间。</p>\n</li>\n<li><p>空闲列表</p>\n<p>维护一个列表，记录哪些内存块可用</p>\n</li>\n</ul>\n<p>并发分配内存：</p>\n<ul>\n<li>CAS+失败重试：通过CAS保证操作原子性</li>\n<li>TLAB（Thread Local Allocation Buffer：本地分配缓存区，在线程初始化时申请Eden一部分空间）：分配内存时先在TLAB分配，到达一定量后通过CAS刷新到堆上。缺点：空间较小大对象无法适配。</li>\n</ul>\n</li>\n<li><p>类初始化</p>\n<ul>\n<li><p>初始化零值</p>\n<p>设置初始值，对象头不调整</p>\n</li>\n<li><p>设置对象头</p>\n<p><strong>虚拟机要对对象进行必要的设置</strong>，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 <strong>这些信息存放在对象头中。</strong> 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。</p>\n</li>\n<li><p>init方法执行</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>对象内存布局</p>\n<p>对象头，实例数据，对齐填充</p>\n<p><strong>Hotspot 虚拟机的对象头包括两部分信息</strong>，<strong>第一部分用于存储对象自身的运行时数据</strong>（哈希码、GC 分代年龄、锁状态标志等等），<strong>另一部分是类型指针</strong>，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。</p>\n<p><strong>实例数据部分是对象真正存储的有效信息</strong>，也是在程序中所定义的各种类型的字段内容。</p>\n<p><strong>对齐填充部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。</strong> 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</p>\n</li>\n<li><p>对象访问方式</p>\n<p>句柄和直接指针</p>\n<ul>\n<li><p>句柄指向句柄池数据（堆），再由句柄池指向实例数据（堆）和对象类型数据（栈）</p>\n</li>\n<li><p>直接指针直接执行对象实例数据（堆），其对象头存在指向对象类型数据（栈）的指针</p>\n</li>\n</ul>\n<p>优缺点：句柄在对象变化过程后用户的引用无需变化，而直接指针需要变化。但是直接指针少一次指针定位开销，速度更快。</p>\n</li>\n<li><p>类加载模型</p>\n<p>双亲委托</p>\n<p>如果自定义类加载器：继承<code>ClassLoader</code>，重写<code>findClass()</code>方法，如果需要打破双亲委托，则需要重写<code>loadClass()</code>方法</p>\n</li>\n<li><p>JVM参数与优化</p>\n<p>参考：<a href=\"https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md\">https://github.com/Snailclimb/JavaGuide/blob/main/docs/java/jvm/jvm-parameters-intro.md</a></p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"面试问题整理\"><a href=\"#面试问题整理\" class=\"headerlink\" title=\"面试问题整理\"></a>面试问题整理</h1><ol>\n<li><p>字符型常量与字符串常量的区别？</p>\n<p>字符常量相当于一个整形ASCII值，可以参与运算；字符串是内存地址。字符串常量2个字节；字符串若干个字节</p>\n</li>\n<li><p>重写遵循规范</p>\n<ol>\n<li>方法名，形参需要相同</li>\n<li>返回值类型以及声明异常均小于或等于父类方法</li>\n<li>访问权限需大于或等于父类方法</li>\n</ol>\n</li>\n<li><p>可变长参数</p>\n<p>可以传入不等长参数：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">(String... args)</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//......</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的：如果方法重载，固定参数方法优先级会高于变长参数方法</p>\n</li>\n<li><p>基本数据类型与包装类的区别？</p>\n<ol>\n<li>包装类型默认值null</li>\n<li>包装类型可用于泛型</li>\n<li>基本数据类型局部变量存储与Java虚拟机栈局部变量表中，基本数据类型的成员变量存在堆中，包装类型都在堆中</li>\n</ol>\n</li>\n<li><p>构造方否可以override？</p>\n<p>不能override，可以overload</p>\n</li>\n<li><p>java 9为何将String底层由 char[] 改成了 byte[] ?</p>\n<p>新版的 String 其实支持两个编码方案： Latin-1 和 UTF-16。如果字符串中包含的汉字没有超过 Latin-1 可表示范围内的字符，那就会使用 Latin-1 作为编码方案。Latin-1 编码方案下，<code>byte</code> 占一个字节(8 位)，<code>char</code> 占用 2 个字节（16），<code>byte</code> 相较 <code>char</code> 节省一半的内存空间。</p>\n</li>\n<li><p>String采用运算符“+”拼接为何耗费内存？</p>\n<p>内部采用StringBuillder.append() 方法实现，拼接完后调用toString() 得到Stirng对象。这样就会存在大量的StringBuilder对象。</p>\n</li>\n<li><p>字符串常量池什么作用？</p>\n<p>创建字符串后会在堆中创建具体对象，然后在常量池中创建对应的引用。访问字符串是直接返回常量池中的引用即可。字节码命令“ldc” 可以判断字符串常量池是否保存对应的字符串对象引用。</p>\n</li>\n<li><p>intern方法作用</p>\n<p>native方法：如果字符串常量池不包含字符串饮用添加。然后返回字符串引用。</p>\n</li>\n<li><p>常量折叠</p>\n<p>对于源代码中存在的可以确定的static final修饰的基础变量数据类型以及String，会对其进行计算并作为常量嵌入最终生成代码中。这事javac编译器做的优化</p>\n</li>\n<li><p>finally代码一定执行吗？</p>\n<p>不一定！虚拟机异常终止便不会执行了。比如调用：System.exit(1); 还有所在线程死亡，CPU停止执行。</p>\n</li>\n<li><p>Java只有值传递吗？</p>\n<p>是的，无论是基础类型还是引用类型。如果要修改对象值，通过引用修改即可。</p>\n</li>\n<li><p>通过类加载器与Class.forName()差异</p>\n<p>Class.forName() 可以指定是否初始化Class，类加载器不会初始化。如果不出实话静态代码不会得到执行。</p>\n</li>\n<li><p>精度丢失与BigDecimal</p>\n<p>由于float，double等表示小数时由于二进制存储原理，对于一些小数没有精确的2进制表示形式所以存在精度丢失。BigDecimal实现利用了BigInteger，并加入小数位的概念实现避免了精读丢失。</p>\n</li>\n</ol>\n"},{"title":"How to use hexo","date":"2022-05-29T01:06:33.000Z","_content":"\n# 参考  \nhttps://hexo.io/docs/\n\n# 准备  \n## Nodejs  \n\n## Git\n\n# 初始化  \n\n```bash\nnode hexo init blog  # create dir blog and init\ncd blog \nnpm init\n```\n\n# 配置  \n\n修改_config.yml文件，具体配置项参考文章顶部链接\n\n# 日常使用  \n\n```bash\nnode hexo clean  # clean\nnode hexo s  # start server to preview\n```\n\n修改主题：\n\n下载主题到theme目录下，修改_config.yml下theme配置即可\n\n# 配合github pages使用\n\n_config.yml配置github仓库以及branch\n\n一键deploy需要安装插件：hexo-github-dploy\n\nsearch功能插件：hexo-search-db\n\n具体参考文章顶部链接\n","source":"_posts/How-to-use-hexo.md","raw":"---\ntitle: How to use hexo\ndate: 2022-05-29 09:06:33\ntags:\n  - hexo\n  - blog\n  - 工具\n---\n\n# 参考  \nhttps://hexo.io/docs/\n\n# 准备  \n## Nodejs  \n\n## Git\n\n# 初始化  \n\n```bash\nnode hexo init blog  # create dir blog and init\ncd blog \nnpm init\n```\n\n# 配置  \n\n修改_config.yml文件，具体配置项参考文章顶部链接\n\n# 日常使用  \n\n```bash\nnode hexo clean  # clean\nnode hexo s  # start server to preview\n```\n\n修改主题：\n\n下载主题到theme目录下，修改_config.yml下theme配置即可\n\n# 配合github pages使用\n\n_config.yml配置github仓库以及branch\n\n一键deploy需要安装插件：hexo-github-dploy\n\nsearch功能插件：hexo-search-db\n\n具体参考文章顶部链接\n","slug":"How-to-use-hexo","published":1,"updated":"2022-05-30T09:52:09.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sk2sr800033ch8guusfxqt","content":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://hexo.io/docs/\">https://hexo.io/docs/</a></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node hexo init blog  <span class=\"comment\"># create dir blog and init</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog </span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>修改_config.yml文件，具体配置项参考文章顶部链接</p>\n<h1 id=\"日常使用\"><a href=\"#日常使用\" class=\"headerlink\" title=\"日常使用\"></a>日常使用</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node hexo clean  <span class=\"comment\"># clean</span></span><br><span class=\"line\">node hexo s  <span class=\"comment\"># start server to preview</span></span><br></pre></td></tr></table></figure>\n\n<p>修改主题：</p>\n<p>下载主题到theme目录下，修改_config.yml下theme配置即可</p>\n<h1 id=\"配合github-pages使用\"><a href=\"#配合github-pages使用\" class=\"headerlink\" title=\"配合github pages使用\"></a>配合github pages使用</h1><p>_config.yml配置github仓库以及branch</p>\n<p>一键deploy需要安装插件：hexo-github-dploy</p>\n<p>search功能插件：hexo-search-db</p>\n<p>具体参考文章顶部链接</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://hexo.io/docs/\">https://hexo.io/docs/</a></p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><h2 id=\"Nodejs\"><a href=\"#Nodejs\" class=\"headerlink\" title=\"Nodejs\"></a>Nodejs</h2><h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><h1 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node hexo init blog  <span class=\"comment\"># create dir blog and init</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog </span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>修改_config.yml文件，具体配置项参考文章顶部链接</p>\n<h1 id=\"日常使用\"><a href=\"#日常使用\" class=\"headerlink\" title=\"日常使用\"></a>日常使用</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node hexo clean  <span class=\"comment\"># clean</span></span><br><span class=\"line\">node hexo s  <span class=\"comment\"># start server to preview</span></span><br></pre></td></tr></table></figure>\n\n<p>修改主题：</p>\n<p>下载主题到theme目录下，修改_config.yml下theme配置即可</p>\n<h1 id=\"配合github-pages使用\"><a href=\"#配合github-pages使用\" class=\"headerlink\" title=\"配合github pages使用\"></a>配合github pages使用</h1><p>_config.yml配置github仓库以及branch</p>\n<p>一键deploy需要安装插件：hexo-github-dploy</p>\n<p>search功能插件：hexo-search-db</p>\n<p>具体参考文章顶部链接</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-05-29T01:02:12.477Z","updated":"2022-05-29T01:02:12.477Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sk2srb00063ch8cvsfhm5a","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"项目介绍之亮点与难点","date":"2022-05-30T01:34:16.000Z","_content":"\n面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。\n\n# 1.项目亮点\n\n采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？\n\n比如：\n\n- 针对复杂业务根据模块拆分从而更加灵活\n- 改为无状态服务解耦\n- 采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性\n- 采用了统一网关进行链路追踪方便问题定位以及集中化配置\n- 采用配置中心提供即时生效的配置更新与完善的权限控制\n- 统一日志采集提供快速问题定位\n- 告警系统提供实时邮件提醒\n- ......\n\n\n\n# 2.项目难点\n\n遇到了什么棘手的问题，如何分析定位问题？如果解决？\n\n比如：\n\n- 由于MQ失败重试导致的数据错误\n\n  由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。\n\n- Kerberos认证多HBase集群错误\n\n  再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。\n\n- JVM方法区OOM\n\n  由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。\n\n- DNS导致HBase Region不可用\n\n  由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。\n\n- ......\n\n\n\n# 总结\n\n对于项目面试，首先对项目有自己的认识靠清楚几个问题：\n\n- 是解决什么问题的？\n- 是如何解决的？\n- 解决过程中遇到哪些问题？\n- 问题产生的原因是什么？\n- 如果解决遇到问题的？\n- 为什么这样解决？\n- 如何减少问题发生的？\n- 有哪些调优的经验？\n","source":"_posts/项目介绍之亮点与难点.md","raw":"---\ntitle: 项目介绍之亮点与难点\ndate: 2022-05-30 09:34:16\ntags: \n  - 面试\n  - 项目\n---\n\n面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。\n\n# 1.项目亮点\n\n采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？\n\n比如：\n\n- 针对复杂业务根据模块拆分从而更加灵活\n- 改为无状态服务解耦\n- 采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性\n- 采用了统一网关进行链路追踪方便问题定位以及集中化配置\n- 采用配置中心提供即时生效的配置更新与完善的权限控制\n- 统一日志采集提供快速问题定位\n- 告警系统提供实时邮件提醒\n- ......\n\n\n\n# 2.项目难点\n\n遇到了什么棘手的问题，如何分析定位问题？如果解决？\n\n比如：\n\n- 由于MQ失败重试导致的数据错误\n\n  由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。\n\n- Kerberos认证多HBase集群错误\n\n  再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。\n\n- JVM方法区OOM\n\n  由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。\n\n- DNS导致HBase Region不可用\n\n  由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。\n\n- ......\n\n\n\n# 总结\n\n对于项目面试，首先对项目有自己的认识靠清楚几个问题：\n\n- 是解决什么问题的？\n- 是如何解决的？\n- 解决过程中遇到哪些问题？\n- 问题产生的原因是什么？\n- 如果解决遇到问题的？\n- 为什么这样解决？\n- 如何减少问题发生的？\n- 有哪些调优的经验？\n","slug":"项目介绍之亮点与难点","published":1,"updated":"2022-05-30T09:03:19.647Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3sk2src00083ch8etosgnmf","content":"<p>面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。</p>\n<h1 id=\"1-项目亮点\"><a href=\"#1-项目亮点\" class=\"headerlink\" title=\"1.项目亮点\"></a>1.项目亮点</h1><p>采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？</p>\n<p>比如：</p>\n<ul>\n<li>针对复杂业务根据模块拆分从而更加灵活</li>\n<li>改为无状态服务解耦</li>\n<li>采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性</li>\n<li>采用了统一网关进行链路追踪方便问题定位以及集中化配置</li>\n<li>采用配置中心提供即时生效的配置更新与完善的权限控制</li>\n<li>统一日志采集提供快速问题定位</li>\n<li>告警系统提供实时邮件提醒</li>\n<li>……</li>\n</ul>\n<h1 id=\"2-项目难点\"><a href=\"#2-项目难点\" class=\"headerlink\" title=\"2.项目难点\"></a>2.项目难点</h1><p>遇到了什么棘手的问题，如何分析定位问题？如果解决？</p>\n<p>比如：</p>\n<ul>\n<li><p>由于MQ失败重试导致的数据错误</p>\n<p>由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。</p>\n</li>\n<li><p>Kerberos认证多HBase集群错误</p>\n<p>再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。</p>\n</li>\n<li><p>JVM方法区OOM</p>\n<p>由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。</p>\n</li>\n<li><p>DNS导致HBase Region不可用</p>\n<p>由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。</p>\n</li>\n<li><p>……</p>\n</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于项目面试，首先对项目有自己的认识靠清楚几个问题：</p>\n<ul>\n<li>是解决什么问题的？</li>\n<li>是如何解决的？</li>\n<li>解决过程中遇到哪些问题？</li>\n<li>问题产生的原因是什么？</li>\n<li>如果解决遇到问题的？</li>\n<li>为什么这样解决？</li>\n<li>如何减少问题发生的？</li>\n<li>有哪些调优的经验？</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>面试中对于项目考察，通常会询问项目中的亮点已经难点。这其实是考察对工作熟悉以及发现并解决问题能力，还有总结归纳的能力。</p>\n<h1 id=\"1-项目亮点\"><a href=\"#1-项目亮点\" class=\"headerlink\" title=\"1.项目亮点\"></a>1.项目亮点</h1><p>采用了哪种技术方案，达成了什么样的效果。新方案的优劣势如何？</p>\n<p>比如：</p>\n<ul>\n<li>针对复杂业务根据模块拆分从而更加灵活</li>\n<li>改为无状态服务解耦</li>\n<li>采用订阅发布模型集中维护数据流向，结偶并提升容错和可维护性</li>\n<li>采用了统一网关进行链路追踪方便问题定位以及集中化配置</li>\n<li>采用配置中心提供即时生效的配置更新与完善的权限控制</li>\n<li>统一日志采集提供快速问题定位</li>\n<li>告警系统提供实时邮件提醒</li>\n<li>……</li>\n</ul>\n<h1 id=\"2-项目难点\"><a href=\"#2-项目难点\" class=\"headerlink\" title=\"2.项目难点\"></a>2.项目难点</h1><p>遇到了什么棘手的问题，如何分析定位问题？如果解决？</p>\n<p>比如：</p>\n<ul>\n<li><p>由于MQ失败重试导致的数据错误</p>\n<p>由于MQ一般不会无限重试，所以在对于错误消息会设置延迟重试。此时存在一个问题：如果A，B两笔数据存在依赖关系。这将导致数据不一致。后续我们采用error-callback对于错误数据进行异步修复，并对修复数据集进行监控。</p>\n</li>\n<li><p>Kerberos认证多HBase集群错误</p>\n<p>再多集群情况下采用Kerberos认证时发现存在无法找到正确relm的情况。后续通过debug发现对于请求的Kerberos配置读取存在静态存储。通过阅读源码使用Config.refresh() 在每次获取链接时重新读取配置即可。</p>\n</li>\n<li><p>JVM方法区OOM</p>\n<p>由于读取配置文件解析时使用的序列化工具内部采用ASM技术动态生成。导致大量Class被加载，最终导致OOM。后续优化方案：配置无需多次加载，对配置进行缓存即可。</p>\n</li>\n<li><p>DNS导致HBase Region不可用</p>\n<p>由于采用公司集中配置管理的DNS服务。其中存在冲突配置导致RegionServer连接异常。排查发现后联系IT解决冲突。</p>\n</li>\n<li><p>……</p>\n</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>对于项目面试，首先对项目有自己的认识靠清楚几个问题：</p>\n<ul>\n<li>是解决什么问题的？</li>\n<li>是如何解决的？</li>\n<li>解决过程中遇到哪些问题？</li>\n<li>问题产生的原因是什么？</li>\n<li>如果解决遇到问题的？</li>\n<li>为什么这样解决？</li>\n<li>如何减少问题发生的？</li>\n<li>有哪些调优的经验？</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl3sk2sr400013ch89um62amk","tag_id":"cl3sk2sra00043ch86faq8fs4","_id":"cl3sk2sre000c3ch8aidyeuh6"},{"post_id":"cl3sk2sr400013ch89um62amk","tag_id":"cl3sk2srd00093ch8apcm4so8","_id":"cl3sk2sre000d3ch87plf7g5i"},{"post_id":"cl3sk2sr400013ch89um62amk","tag_id":"cl3sk2srd000a3ch83nmtbokr","_id":"cl3sk2sre000f3ch86cmv2wfo"},{"post_id":"cl3sk2sr800033ch8guusfxqt","tag_id":"cl3sk2sre000b3ch83v1sgi1z","_id":"cl3sk2srf000i3ch84d85bk1t"},{"post_id":"cl3sk2sr800033ch8guusfxqt","tag_id":"cl3sk2sre000e3ch88jtdbnnh","_id":"cl3sk2srf000j3ch8g0gu67f0"},{"post_id":"cl3sk2sr800033ch8guusfxqt","tag_id":"cl3sk2sre000g3ch8efmtekft","_id":"cl3sk2srf000k3ch88a9basuu"},{"post_id":"cl3sk2src00083ch8etosgnmf","tag_id":"cl3sk2sra00043ch86faq8fs4","_id":"cl3sk2srf000l3ch8ewwv39ob"},{"post_id":"cl3sk2src00083ch8etosgnmf","tag_id":"cl3sk2sre000h3ch81nsy26zk","_id":"cl3sk2srf000m3ch8hugf6l19"}],"Tag":[{"name":"面试","_id":"cl3sk2sra00043ch86faq8fs4"},{"name":"Java","_id":"cl3sk2srd00093ch8apcm4so8"},{"name":"基础","_id":"cl3sk2srd000a3ch83nmtbokr"},{"name":"hexo","_id":"cl3sk2sre000b3ch83v1sgi1z"},{"name":"blog","_id":"cl3sk2sre000e3ch88jtdbnnh"},{"name":"工具","_id":"cl3sk2sre000g3ch8efmtekft"},{"name":"项目","_id":"cl3sk2sre000h3ch81nsy26zk"}]}}